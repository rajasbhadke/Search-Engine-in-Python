         ŞÛÛİ° ÜÛÛÛÛÛÜ ÜÛÛÛÛÛÛ° ÛÛ°  ÛÛ° ÜÛÛÛÛÛÛ° ÛÛ°    ÛÛ° ÜÛÛÛÛÛÜ
          ÛÛ°  ÛÛ°°°°° ÛÛÜÜÜÜ°  ÛÛÛÜ ÛÛ° ÛÛÜÜÜÜ°  ÛÛ°    ÛÛ° ÛÛ°°°°°
          ÛÛ°  ÛÛ°     ÛÛßßßß°  ÛÛßÛÛÛÛ° ÛÛßßßß°  ÛÛ° Ü  ÛÛ° ßÛÛÛÛÛÜ
         ŞÛÛİ° ßÛÛÛÛÛß ßÛÛÛÛÛÛ° ÛÛ° ßÛÛ° ßÛÛÛÛÛÛ° ÛÛÜÛÛÛÜÛÛ°  °°°°ÛÛ°
          ÛÛ°    ÛÛ°°°  ÛÛ°ÛÛ°  ÛÛ°  ÛÛ°  ÛÛ°ÛÛ°° ßÛÛß ßÛÛß  ßÛÛÛÛÛß
          Şİ°    Şİ°    Şİ°Şİ°  Şİ°  Ş°   Şİ°Şİ°   Şİ°  Ş°    Şİ°Ş°
           İ°    Ş°      İ°     Ş°         İ°      Ş°         Ş°

     The Journal of IceNET                                     July 1994
    ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    ³ Editor's Desk                                                     ³
    ³   The Upper Registers                       Deacon Blues (2@7653) ³
    ³   Managing Editor's Notes                           Will (1@6754) ³
    ³   Letters To The Editors                              Louie (6@1) ³
    ³   IceNEWS Op-Ed Forum                                 Louie (6@1) ³
    ³                                                                   ³
    ³ Feature Stories                                                   ³
    ³   WWIVcon 1994 or My 'Holiday Roads' trip          Jim Nunn (1@1) ³
    ³   Why WWIV?                                    Papa Bear (1@5079) ³
    ³   The Man Who Had IceNET Named After Him          IceFreezr (3@1) ³
    ³   The Great .QWK Debate -                                         ³
    ³     Survey Results and More                    Papa Bear (1@5079) ³
    ³   WWIV And The GEnie Online Service               Morgul (1@8315) ³
    ³                                                                   ³
    ³ WWIV-Specific                                                     ³
    ³   How I Write A Modification For WWIV          Papa Bear (1@5079) ³
    ³   WWIV Dreams: The Future and Beyond          NightSpeed (1@5051) ³
    ³   The Asylum Group: This Is Who We Are                            ³
    ³     and Here Is What We Do      Zu Digital (1@7321), Sam (1@2077) ³
    ³   WWIV and OS/2                                     Will (1@6754) ³
    ³                                                                   ³
    ³ Software/Programming                                              ³
    ³   BBSing Enters A New Dimension:                                  ³
    ³     The RIPscrip Graphics Protocol     Zack Ives (WWIVnet 3@7729) ³
    ³     Learning C - Part Six                       Daarkhan (1@7676) ³
    ³   The Making of a Mod                    Spotnik (WWIVnet 1@5497) ³
    ³                                                                   ³
    ³ Lite Bytes                                                        ³
    ³   Silly Strings                                Ima Moron (1@9661) ³
    ³   The Hows and Whys of Handles                        Louie (6@1) ³
    ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
    ³                    IceNEWS Staff For July 1994                    ³
    ³                                                                   ³
    ³    "...Winners of the 1994 WWIVcon Award for Electronic News"     ³
    ³                                                                   ³
    ³                    IceNEWS Publisher - Jim 1@1                    ³
    ³           IceNEWS Editor-In-Chief - Deacon Blues 2@7653           ³
    ³              IceNEWS Managing Editor - Will (1@6754)              ³
    ³                                                                   ³
    ³                    IceNEWS Contributing Editors                   ³
    ³  Hardware - Will 1@6754   Software/Programming - Daarkhan 1@7676  ³
    ³  WWIV-Specific - Papa Bear 1@5079   Lite Bytes - Ima Moron 1@9661 ³
    ³                                                                   ³
    ³            Editors-At-Large - Louie 6@1, Chris #1@7658            ³
    ³               IceNEWS Production - Spelunker 1@7653               ³
    ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´
    ³     IceNEWS is always seeking submissions from those who have     ³
    ³      ideas for stories. If you have any ideas that you might      ³
    ³        like to see published, contact any IceNEWS editor or       ³
    ³        subscribe to IceNEWS Beat, subtype IceNEWS, host @1.       ³
    ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ


                        ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ E D I T O R ' S   D E S K ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ The Upper Registers ³ Deacon Blues (2@7653)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     As I was sitting at my desk in the IceNEWS offices here on the 13th floor
of the Nunn  Building  -  IceNET's  corporate  headquarters  -  the  following
thoughts occurred to me.

     There was a wire story from The Boston Globe that appeared in the June 1,
1994, Lifestyles section of The Buffalo News  that  rankled  my  feathers  and
offended  my  sensibilities.  The story was about the growing number of senior
citizens who, due to the amount of excess time that they have on their  hands,
are starting to become involved in BBSing.

     What  I  found  upsetting  about  the article was the way that the author
referred to BBSers. The writer used  the  term  "hacker"  as  an  umbrella  to
describe  those who use modems and call BBSes. Really, now? If this author was
not versed enough in the terms used when BBSing and  had  not  researched  the
topic  enough  to  be  able  to  make  the  distinction between a "user" and a
"hacker," then she should not have written the story. At the very  least,  the
editors at the Globe should have caught this error and either killed the story
or made the correction before offering it to other papers.

     It is this type of bone-headed mistake that can make someone who has more
smarts  about  computer  terms than the author of the story (but doesn't modem
themselves) think that anyone who uses a BBS is  automatically  out  to  trash
peoples'  accounts,  steal information, upload viruses, and throw a proverbial
handful of nails across the lanes of the Information Superhighway.

     To the author of the story, the editors at The Globe, and the editors  of
The  Buffalo  News  (for  not catching the error either), I give the following
advice: let those who know about BBSing write stories about  BBSing  and  keep
the literary "hackers" out of print.

     Speaking  of  the  Information  Superhighway,  I see that it now has been
given a new name. Inside Washington D.C., which  is  where  the  idea  of  the
Infobahn  sprung  up  in  the first place, the Information Superhighway is now
being referred to as the "National Information Infrastructure."

     My natural question is "why?" Wasn't the  old  name  politically  correct
enough?  Why don't they just call a spade a spade and name it "tomorrow" since
it's never going to come anyway? I get  the  feeling  that  by  the  time  the
politicians  are  done wrangling with it the Pentium chip will be sitting in a
museum along side of an 8088 processor before the  Information  Infrastructure
goes into service.

     It's just like those AT&T commercials that keep claiming that all of this
wonderful new technology is "coming." It's coming alright. So is  another  ice
age, eventually...

     Ziff-Davis Publishing Company is for sale. Among the magazine titles that
Ziff-Davis publishes are "PC Magazine," "PC Week," and "Computer Shopper." The
reputed  selling  price is $4 billion. A mere bagatelles. I'm going to talk to
Jim to see if he'll float me a loan.

     When we began work on this July issue, I posted on the IceNEWS  Beat  sub
(the  sub  for our readers to speak with the IceNEWS editors, subtype IceNEWS,
host @1) asking readers' thoughts on Pretty Good Privacy  (PGP).  The  use  of
PGP,  a  program that can encrypt posts and e-mail, making it readable only to
those who possess the proper decryption key, has been the center of discussion
on  several  WWIV-based networks. Discussion about whether or not users should
be allowed to use PGP (or other forms  of  encryption)  has,  in  some  cases,
become  what  can best be described as "heated." The pro-PGP contingent argued
that users should be allowed to have privacy if they wished  it,  while  those
opposed  to the idea claimed that PGP could and would be used for unscrupulous
means. After I asked what everyone thought about this issue, I was expecting a
good number of widely varied responses about the subject.

     The  real  surprise  was  that I failed to receive even a single response
about the matter.  Could  it  be  that  these  other  networks  are  making  a
proverbial  mountain  out  of  a  mole  hill? If one can use the utter lack of
response to the subject in IceNET as a gauge, I think  it  would  be  safe  to
assume that the issue of PGP is in really a non-issue.

     Well,  I think that's enough of me for another month. As usual, my thanks
go out to Will and the rest of the IceNEWS staff and contributing writers  for
their usual bang-up job of putting together yet another great issue and making
all of this look easy. Also, my thanks go out to all of our readers for taking
the  time  to  check out IceNEWS and for their continued support in making the
Journal the best network news publication that it can be.

    And now, your July 1994 issue of the IceNEWS Journal.

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Managing Editor's Notes ³ Will (1@6754)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     Welcome  to the July issue of IceNEWS! Among other things, this issue has
the [dubious] distinction of being the first one we've ever intentionally held
back  past the first of the month. However, in doing this, we're able to bring
you Jim's (1@1) report on his  trip  to  the  first  WWIV  Convention  in  New
Orleans. Look for it in the features section.

     Also  in  this issue, we have a special collection of articles on writing
mods for WWIV by three of the most prolific modification writers around,  Papa
Bear  (IceNEWS's  own  WWIV Specific editor and the person behind the series),
Spotnick (author of one of the most widely used WFC modifications  around,  as
well  as  many  others),  and  the  Asylum Group (who have recently released a
freeware QWK packet generator as well as their earlier ListPlus  file  tagging
system).

     Also  in  this  issue,  we  have  WWIV  Under  OS/2, a special article on
RIPscrip graphics by Zack Ives (author of the RIPspeed modification  for  WWIV
4.23),  the  results of our survey on the current incarnation of the Great QWK
Debate, Louie's discourse on the How's and Why's of Handles, me going  on  and
on about the computer industry, and more.

     On  another  note,  while  we  were  wrapping  up  this  issue  I had the
opportunity to attend the Database/Client Server World convention  in  Boston.
While  not  WWIVcon, I did have the chance to see a lot of new products in the
DB/CS arena. While it was somewhat low-key, the obvious star of the  show  was
Borland  International's  dBase 5.0 for Windows. At a very well hidden product
demo/luncheon that I stumbled onto, I had the opportunity to see a demo of the
new  version, given by  none  other  than Borland President Philipp Kahn. The
product helps form the cornerstone of Borland's new direction as a company, in
which  it aims for domination of the database and language arena. According to
Kahn's presentation, Borland already controls 75 percent of the world database
market through dBase III/IV for DOS (54%) and the Paradox products for DOS and
Windows (21%). Kahn also stated that after divesting its spreadsheet  business
to  Novell  in  exchange for a much needed cash infusion, Borland now has $140
million in ready cash after having paid back all its debts, placing it  in  an
excellent position to make good on it's goals.

     The  actual  product, dBase 5 for Windows, looks like it will shape up to
be just about anything anyone could want. Kahn made a big point about it being
"for"  Windows instead of "in" Windows (his example of an "in" Windows product
was competitor Microsoft's FoxPro 2.6 product). One major  innovation  in  the
new  product  is known as "Two Way Tools". While dBase has historically been a
character-based programmed language like C or Pascal (as opposed to a visually
programmed  language  like  Paradox's  ObjectPal or Microsoft's Visual Basic),
"Two Way Tools" is both. The basic dB/Win development environment consists  of
three  windows,  one  for  text commands, one for text output, and one for the
application under development.  You  can  use  visual  tools  (like  those  in
Paradox)  to  design  application  forms.  A  "Form  Expert"  analogous to the
"Wizards" in Microsoft applications, the only Expert currently in the program,
or  external  components  (including  Visual  Basic VBX extensions) to improve
functionality. With Two Way Tools you can also edit the entire program in text
mode, or make on the fly changes in the text command window that are reflected
in the application.

     Borland expects the application to ship in the next six  weeks,  although
no one wanted to give an exact figure. Borland has done extensive testing with
dBase/DOS programs, and according to Kahn, 99.9% of them will run  unmodified.
The  5.0  version of Paradox, Borland's other database product, is expected to
ship this summer, as well.

     Finally, back on the WWIV tack, I'm planning on attempting to revive  the
short-lived  WWIV Chat Session on the Internet Relay Chat. The current goal is
a set one-hour time slot one day a week or month. The exact time slot and  day
haven't  been  decided yet, so if you'd be interested in participating send me
an email over IceNET or to my Internet account at wcrawfor@world.std.com.

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Letters To The Editors ³ Compiled By: Louie (6@1)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     The IceNEWS "Letters To The Editors" column is a forum for the readers to
express their feelings, thoughts, or opinions regarding IceNEWS.  Please  take
the time to write us regarding your feelings on IceNEWS and its contents, good
or bad. We want to hear what you have to say. Remember, IceNEWS is  meant  for
EVERYONE  in  IceNET  and we need YOUR input in order to maintain a successful
and respected publication.

                 Please address any remarks or questions to:

                        IceNEWS Letters To The Editors
                               c/o Louie, #6 @1
                           IceNEWS Editor-At-Large

Starfighter, 1@3113, writes regarding a comment made by Deacon Blues, 1@7653,
in the June, 1994, edition of IceNEWS ("The Upper Registers"):

     Hello. I just briefly read your note in IceNEWS about  the  woman-bashing
and pirate activities. I would just like to say that neither are welcome on my
system. I would also like to add a word about that user  that  sent  hate-mail
through  the  net  and the other sysop's reaction to that. I myself am an Area
Coordinator for IceNET and speak the same for "not being  able  to  watch  the
board  24  hours a day, 7 days a week." However, since you did not say who was
involved, I would just like to say that I, too, have  the  same  reaction  and
would like to see that type of behavior [tolerance] continue.

Deacon Blues replies:

     I'm  glad  to  see  that  you  shared my opinions on the subjects of user
discrimination, piracy, and the need for people to be tolerant of the mistakes
of   others.   Networks  need  users  in  order  to  be  successful,  and  the
discrimination against and/or harassment of new users (female or otherwise) by
others on the networks should not be tolerated. Nor should piracy.

     As for the tolerance issue, I decided not to name names (as the issue was
considered closed) and to  protect  the  sysop  from  whose  system  the  mail
originated from any further embarrassment or humiliation.

------------------------------------------------------------------------------

Strider, 1@6555, writes to Louie, 6@1, Managing Editor for the June 1994
edition of IceNEWS, with his opinions on IceNEWS:

Hello,

     I am a recent addition to IceNET. I noticed that i got  the  WWIVNEWS.NET
in  a  net connection, so I checked it out. Now I would like to thank everyone
that is taking part in IceNEWS. As of now I have only read up to the  Learning
C section. I have learned a lot reading the security part of the journal. From
just what little I can do until I register the BBS, I found some  really  cool
ways  to  protect  the  BBS  from  attempted hacks, one of which is the format
command. It never occurred to me to simply rename the file. And  again  I  say
keep up the good work. Back to why I decided to e-mail you.

     I  am  not  sure if you all already have this in the journal, but I would
like to see a little section about on-line game  reviews.  The  games  I  have
running  currently are Legend Of the Red Dragon, Usurper, Barren Realms Elite,
and Solar Realms Elite. I have been looking for games similar to these  and  I
have tried about 40-60 games with no luck.

     Maybe  a  brief description of the game type/play, a BBS that we can find
the game on. I would be more than open to try the games for  review  and  help
out  in  anyway  possible. It is a frustrating quest to find on-line games you
really want to try and/or want to put on-line. I mean around here  just  about
every  BBS  has  the same games (except for Usurper, only 3 WWIV BBS have that
game. We are keeping it to our selves). Most games I have tried are either too
big  with  to  many options that no one will take the time to play or are just
plain stupid.

     Well that is all for now. Look for more in the future  and  keep  up  the
good work! Glad to be part of IceNET!

    Louie Replies:

     Hello  there.  Welcome  to  IceNET  and  thank  you  for your interest in
IceNEWS. We always like to get letters from our readers.

     We have run some article about games in the past. Zeus, 1@7671,  wrote  a
piece  about the new Tradewars 2.0 beta release a few months back. Admittedly,
though, we have not covered games and other on-line programs  as  much  as  we
should.

     The  main reason why we haven't run many articles about games and on-line
programs is that we have not gotten them submitted to us much. But then,  that
is  just  an excuse. We haven't been beating the bushes for articles like that
either. Probably because not many of we editors are game players.

     In the past I used to play games but I moved beyond that about two  years
ago.  I  don't  know  enough  to write an article about the games that are out
there now. The only games I still know anything  about  are  Tradewars,  Space
Dynasty, Global Wars, and Operation Overkill. And even then my knowledge isn't
extensive anymore.

     IceNEWS would be more than willing to publish some  good  articles  about
games  for  WWIV BBSes. So, if any of our kind readers knows a lot about games
and would like to write an article about  them,  please  contact  one  of  the
IceNEWS Editors.

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ The IceNEWS Op-Ed Forum ³ Louie (6@1)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ

The WWIV Mac Experience  Buzz Burbank 662 @1

     As  BBSing  has taken on new variations and has had its ups and downs. So
have schools. Around January of this year, I had said, "Hey, we are trying all
new  ideas for the Buffalo public school system. I am a former WWIV Sysop have
much knowledge of WWIV and the way it thinks and works. Why not run a WWIV BBS
similar  to The Pinnacle, which is run by Chris, 1@7668. Make a BBS that would
be beneficial for both the school, students, staff and parents at as a whole."

 ÿ ÿ The idea was to simply run a  WWIV BBS at Bennett High School in  the MAC
computer lab.  Well, I had the idea for a BBS since i was attending North Park
Academy (now North Park Middle Academy) when I was  in  7th  grade  but didn't
have  the  WWIV knowledge to do so. So I waited until this year when I finally
started work on BHS BBS,  Bennett High School Bulletin Board System.ÿ It was a
hopeful pilot program for a three month period to see how the BBS was taken by
staff and students. Unfortunately, I could not get this off the ground because
it was impossible to run WWIV on the MacIntosh Computers.  The school gets Mac
Computers for  a bigger  discount than  the IBM  computers,  so 99% of the IBM
computers at the school are obsolete.

     I  asked  myself, "Why hasn't Wayne Bell created a WWIV for the MacIntosh
Computers?" So this is an open letter/request to Wayne Bell. As It  is  today,
the  only  thing available for the Mac is a WWIV "clone" called Hermes. Hermes
is a lovely WWIV-like clone, but it lacks a lot of  WWIV's  friendliness,  had
many flaws and problems, and it is simply not WWIV.

    Think  about  the  possibilities  of a Macintosh WWIV:
    - GUI Graphical User interface / Icons for E-Mail , etc., possibleÿ  ÿ
    - Multitasking to a point where many users  could be online at once
      via a local Apple Talk Network Server ÿ
    - And many more GUI Type additions

     The  MacIntosh  computers are becoming more and more popular as they are,
in fact, easy to use. Being an "IBM Man," I can even see that for young people
these days the MacIntosh computers are easy to use and easy to learn to use. A
BBS software that is easy to learn and master would be a great addition to any
school  anywhere.  As  the  June,  1994  IceNEWS Journal article "WWIV Goes To
School" by Chris, 1@7668, has pointed out, WWIV has been an great  advancement
to the school as a whole.

     The  current  situation  in public high and junior high schools as far as
there being any "Information Superhighway" is  that  there  is  a  very  small
amount  of  information trickling in from an eyedropper. The current output in
schools is that of students knowing little about computers and having  a  hard
time  attempting  to  get  a job in one of the largest growing fields, that of
computers. It has become a current problem where adults  are  not  knowing  as
much as necessary by his/her employers to keep his/her jobs or advance forward
in their current field. A BBS linked  to  networks  and  information  networks
would  be  a  stepping  stone  for  students  as  far  as it comes to computer
literacy. A BBS ruining at a school is a good stepping stone on a road of  fun
and knowledge.

     If  you  are a teacher and are interested in what schools have been doing
via BBSes, just call The Pinnacle at (716) 649-3530 and talk to Chris, or mail
him via IceNET at 1@7668. He will be more than happy to tell you a bit more of
what has occurred at Hamburg Central School District.

     A special note to anyone associated with WWIV or Mr. Wayne Bell: There is
at least 1 person out here who would like a Macintosh-based version of WWIV.

------------------------------------------------------------------------------

Will Crawford On: You Just Can't Spend Money Any More   Will 1@6754

     Anyone  who's had to buy PC equipment in the last year or so has probably
come up against the price/performance  wall.  While  computer  technology  has
always  been expanding much more quickly than virtually any other industry (to
match the amount of exponential improvement that microprocessors have  enjoyed
over  the  last  15  years,  the  auto  industry  would be making cars getting
hundreds of miles per gallon), this has snowballed  over  the  past  year.  In
short  - you just can't spend money any more. It's obsolete before it's out of
the box, or, more usually, before it's even out of the showroom. Or  into  the
showroom.

     My  father  bought  a laptop recently. Just for word process- ing, and to
use a parallel port scanner. This is a 486sx/33 with a  passive  matrix  color
screen.  I  went with him to help him buy it. When he got it home, he began to
gush about how amazing it was. Bill bought one of the original IBM  PC's  back
in  the  early  1980s. He can't get over the fact that, 13 years later, he was
able to purchase this tiny, color, machine  that  is  a  few  dozen  times  as
powerful,  weighs  in  at  6.2  pounds,  and cost less than half as much. What
surprised me was that the same configuration, as a desktop, had cost  $4000  a
year ago. The price had dropped by $2000 in just one year.

     It's  showing up on my system too, of course. My primary machine, which I
run the BBS on, is quite  a  mishmash  of  peripheral  equipment  dating  from
several machines over the past 7 years. While there's nothing that was used in
my first  machine  (an  8088  clone)  still  operating,  I  have  a  chain  of
progression  going  back  to  the  mid  1980's. The central processing unit, a
486dx2-66 tower, was the most powerful thing I could  buy  just  last  August.
With  the exponential performance curve, for a few hundred dollars more than I
paid then (for a maxed out  system,  about  2500  without  my  hard  disk  and
monitor,  which  I  recycled from my older 386), I could buy a Pentium 90 with
three times the processing power, a  hard  disk  and  monitor,  and  eight  to
sixteen  megabytes of RAM. My power system has become entry level in less than
a year. Even though I still can't run Windows NT,  I'm  not  happy  that  this
keeps happening to me.

     With  all  the  latest  advances by Intel and the rest of the chip making
crowd (such as IBM and Apple with the PowerPC - see last issue's column), this
is  not  going  to get any better anytime soon. Apple is gearing up to release
the next generation of PowerMacs, and the three-company consortium is about to
release  a  new  version  of the PowerPC chip, that's both cheaper and faster.
People who have bought PowerPC systems now will be sunk. Intel is  ramping  up
the  Pentium production, so we can expect even clock tripled 486's to begin to
fade from the scene over the next six months to a year. The 386 has been  dead
since  mid-1993, and the 486 will follow shortly. While Intel is still selling
millions of the things, and they're still being used in  most  new  computers,
the days of the 486 are certainly numbered.

     Where's  it  going  to  end?  And  when?  Certainly not for a while. Chip
performances will always be  increasing,  and  with  the  present  competitive
environment,  all  the  companies that make these things will be attempting to
top each other. The PC of choice is down to about $3000, down from  the  $5000
mark  a few years ago. And this spiral of leaving people behind will continue.
Buyers will just have to decide when  the  current  level  of  performance  is
enough, and make the purchase then, regardless of the consequences.

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ


                      ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ F E A T U R E   S T O R I E S ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄ¿
³WWIVcon '94³ "Holiday Roads" Jim 1@1
ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     I  could not have asked for more out of WWIVcon. Meeting the faces behind
the handles of folks I'd known across the modem  for  such  a  long  time  was
indeed  a  rewarding  experience,  and one that I highly recommend you plan on
having for yourself next year...so start saving up now, and have no excuses!

     Friday morning on July 1st,  Special  Agent  and  I  began  driving  from
Buffalo to New Orleans, a planned 24 hour drive which we made in 21 due to the
HIGH speed traffic on all roads outside New York. Arriving at the Comfort  Inn
at  6am,  I  was  almost  certain we would be the first to get to WWIVcon, and
would probably have to wait til 3pm or so to check in. Pleasantly surprised by
the  cordiality  of the Hotel conceierge, both Frank and I were given our room
keys and we proceeded to rest up and watch O.J.'s preliminary hearing  in  the
room til about 5pm.

     The  lobby  was the main gathering place for attendees, and Linwood Davis
had laid out our nametags, so we all had a way to tell who  we  were.  It  was
somewhat  amazing  how  fast we did get to know each other. Within 20 seconds,
conversation immediately felt like talking to an old  friend,  which  it  was!
None  of  those  normal  first meeting jitters, but just falling right in tune
with everyone.

     Friday night came and went quickly for me, and I was  able  to  borrow  a
laptop  from  Linwood  to  check  up  on  Louie  back  on  my  boards  who was
house-sitting for me in my absence. My room soon filled  up  with  some  other
attendees...Special  Agent,  Jafo,  Benny Hill, Morgul, Dr. Diversity, myself,
and my room phone bill was run up a bit, but  we  had  some  good  talks,  and
suddenly  it  was  2:30 am so all were kicked out and I retired to my sleeping
chambers.

     Saturday again was a whirl of activity,  all  carefully  planned  out  by
Filo,  who  had  distributed  the  agenda  the night before. In the morning, a
session on NETWORKING, with Linwood, myself, and Wayne was  conducted.  Before
the session, the three of us huddled to decide who would go first, and what we
would say. Wayne suggested we wing it, Linwood volunteered  to  go  first,  so
with  this plan in place, we were announced by Filo and the NETWORKING session
began. Linwood spoke, gave out door prizes, I spoke on IceNET history I think,
and Wayne answered questions. With Linwood on the dias both Wayne and I looked
great up there. Wayne more so than me, but both our red hair and  red  trimmed
beards matched. I later found out that Graham Mainwaring was a real Wayne Bell
look-a-like. Nobody looked like Linwood, and Filo resembled  a  cross  between
Gabby Hayes and an Oak Ridge Boy.

     We  broke for lunch, and then back to the meeting hall for a session with
a Lantastic expert, and between he and I we had a pretty  good  discussion  of
local   area  networks  and  their  application  to  WWIV  and  multi-instance
installations. Though I can't remember who, one of the attendees  won  a  free
shrink-wrapped  copy  of  Lantastic  Z, the two node version of Lantastic that
does not require adapter cards. Better than a coffee cup, which BTW  I  didn't
even win. I did win some very nice awards later at the awards banquet, which I
missed as by 8pm Saturday I was totally exhausted, and conked out in  my  room
watching reruns of O.J.'s first day in court.

     Nevertheless,  getting  the  awards  the  next morning at breakfast was a
pleasure. One was particularly well deserved, something about being an  'early
bird'  which  I'm  sure  I clinched by not making the awards banquet the night
before. The one that really meant the most was for IceNEWS, signed by Filo and
Wayne,  and well deserved by the IceNEWS writers, staff, and management. I was
really pleased that this was recognized.

     Two other sessions were held, one with the  group  of  Beta  Testers  who
attended, including myself, Sandman, Wayne, Sam, Benny Hill, H2ODoc, Filo, and
a session with Wayne as the only  Speaker.  Wayne  answered  questions  again,
discussed  the  features  of 4.24, and generally delighted the entire audience
with his expertise, wit,  charm,  and  all-around  good  nature  in  answering
questions,  and also dodging a few. Amazing what some people will ask a fellow
:)

     Special Agent and I began our return drive about  3pm  Sunday,  and  blew
into Buffalo about 21 hours later. And we're still friends. :)

Most of all, thanks to Filo for leading the way to make it all happen, and to
all the sysops who came.  I wish I was still there with all of you.

Remember, WWIVcon 1995 is just around the corner.  Be there!

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ


ÚÄÄÄÄÄÄÄÄÄÄÄ¿
³ Why WWIV? ³ Papa Bear (1@5079)
ÀÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     I've  been  either a user of BBSes or a Sysop of BBSes since 1981. During
the majority of the 80's, I ran BBSes on Commodore  64's  and  128's.  When  I
called  other  BBSes, they ran a wide variety of software on quite a number of
differing platforms.

     When I was starting calling IBM-type BBSes on  a  regular  basis,  I  was
exposed to not only WWIV, but to Searchlight, TAG, WildCat, PCBoard, Vision/X,
etc., ad nauseum, as well.

     On October 1, 1991, I started this particular BBS on my first IBM machine
under  the tutelage of one of the all-time great WWIV SysOps - Frank Reid - in
the little town of Adak, Alaska. For the past two years, I've been running the
same BBS, albeit upgraded a few times, here in Alameda CA. During the past few
years, I've been responsible to quite a number of other people  starting  WWIV
BBS's.  Many  of them are still online today. Those SysOps, like myself, get a
great deal of satisfaction out of WWIV.

     But Why?  Why did I pick WWIV and continue to use and promote it?

     Well, it is something like this. I've _always_ liked running BBSes. In my
Commodore  days, my Father and I co-authored a BASIC BBS software program that
stayed online for 8 years without interruption. The experience of having  more
than  a  "passing"  acquaintance  with  the  way the BBS actually ran, and the
control I had over its execution. made a very serious and  lasting  impression
on  me.  It  was  something I liked and something that I definitely looked for
when I switched over to IBM.

     So when I first called Frank's WWIV BBS (Eagle's Dare) in Alaska  and  he
had  me test various modifications that he had installed, I was hooked. Here I
found a BBS program that allowed the Sysops to make their BBSes anything  they
wanted.  I  started  going over his house. I watched him code the BBS from the
most basic and easy functions to some of the most complicated. I  was,  to  be
honest,  both  fascinated  and awed at the same time. Little did I know at the
time that those times with him would eventually lead to the place at  which  I
am now -- a prolific modification author in my own right.

     This, in my way, explains one of the most redeeming features of WWIV. The
ability to make it _anything_ you want. To customize it in such a  fashion  as
to  make  yours  the  most  unique  BBS around. To have the control to make it
reflect your tastes and ideas of the way a BBS should look, and operate.  None
of  the  other  BBS  softwares I have been exposed to have this capability, to
this extent.

     If you see something that another BBS program has, then it is usually not
a  big  deal  to  code the same thing into WWIV. If you are not up to doing it
yourself, you can be sure that there are a number of other modders  out  there
that can, and will, gladly do it for you.

     I was first impressed with the ease of installation. I was up and running
in literally a matter of a few hours. Everything I needed was there, and I was
accepting  callers  the  same day. This is another mark in WWIV's favor. I did
try a few others and, honestly, they weren't as easy to set up. Just  today  I
spoke with a brand-new WWIV Sysop, and he, too, was extremely pleased with the
ease of installation and setup.

     Once I decided to register WWIV (and it didn't take long to decide) I was
please  to  find that it was only $55 for complete registration and the source
code. I couldn't believe it! Today, at $85, it is still a steal. Try to  match
that  offer  with  any other BBS program. You may be able to find another that
cheap, but it won't have all the "extras" WWIV has.

     What extras are those?  Well,  for  one,  overwhelming  support  for  the
program.  Even  if  you  don't  do the modification scene, there are literally
thousands of Sysops out there that can, and will, answer even the  most  basic
of  questions.  The author himself will answer your questions if you decide to
E-Mail him.

     The other "extras" would include excellent networking. I know most of the
other  major  BBSes  have networking. Most have bigger nets and more nodes. Be
that as it may, WWIV-style nets are, for the most  part,  friendlier.  They're
more  laid  back,  less  "stressful,"  and  more  open  to new users. I rarely
experience these qualities on the larger nets. Add to the network equation the
variety  and number of netted subboards, which probably number in the multiple
thousands, and you literally have a cornucopia of interesting things  to  talk
about on any subject to people all over the world.

     Additionally,  there  is outstanding external utility support. You do not
have to be a programmer or modify WWIV to get what  you  want.  There  are  an
unbelievable   number  of  "externals"  out  there  that  replace  stock  WWIV
functions. User editors, USER.LOG customizers, logon events, and more. And, if
you can't find what you're looking for, someone will write it.

     Finally,  there is the outright friendliness of the WWIV SysOp community.
While there are stick-in-the-mud's, they are few and far between. I have found
this  association  of  SysOps  to  be out and out the easiest and nicest to be
around, and work with.

     Recently, I heard a SysOp say that working on WWIV was  like  working  on
your  hot  rod  in  your back yard when you were growing up. I find this to be
pretty accurate. Much of the work I do on my BBS includes making it run faster
and  smoother,  making  the "paint job" nicer, or improving its "sound system"
(subboards/nets). Sometimes there is nothing as fulfilling as breaking out the
old  source  code  and  doing  some  tinkering. And, when you hit on something
particularly useful or nice, sharing it with your fellow Sysops can instill  a
feeling  of  accomplishment and pride. Its like an old familiar friend after a
while. Its a learning  experience.  Its  a  fantastic  way  to  meet  new  and
interesting people.

     While  WWIV  has been described as a "hobby" BBS -- and it most certainly
is, there is no shame in that at all -- it does have the capability to compete
with all but the most "commercial" or "professional" BBS's.

     About  the  only  thing  that  can't be reasonably done (make no mistake,
tho', it can be done with WWIV, but not easily) is run one  of  these  monster
multi-line,        satellite        connect,        Internet        real-time,
pay-by-the-month-for-access-using-your-Visa, informational  service  wannabes.
But  those  BBSes  are  so cold, unfriendly, and businesslike, and who but the
severely money-minded person wants to run a BBS like a business?

     It is also evolving. The developers of WWIV, WWIV Software  Services  and
Wayne  Bell in particular, listen to most reasonable suggestions and implement
the ones that are in popular demand. Look for improved memory  management  and
increased  subboard/directory  limits  in  the future. There also may be FIDO,
RIP, and OS/2 and Windows specific versions in WWIV's future,  something  that
should secure WWIV's place in BBS land for many years to come.

     So,  with  its  ability to be totally customizable, its low cost, ease of
installation, support, networking, friendly SysOps, and its  future  expansion
capabilities,  WWIV  remains  the BBS software of my choice. I hope it remains
one for you, too!

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ The Man Who Had IceNET Named After Him ³ IceFreezr (3@1)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     It  was  1990.  I was 12 years old at the time and very fascinated by the
underground cyberworld that most people didn't know about.  I  called  PC-Link
(before  it  became  America  Online) with my Tandy 1000 and learned the ropes
pretty quickly. I taught myself DOS and GW-BASIC pretty easily. Of course, you
had  no  choice back then - if you wanted to use the computer you had to learn
how to use it. Having an Atari prior to the Tandy taught me this. I progressed
onto  a  local  multiline BBS which had a pretty good following at the time. A
lot of age groups called this board - from kids to adults.

     Anyway, that's where I met Jim Nunn. One day he came  on  the  board  and
said that he bought a new computer. I put two and two together and told him to
start a BBS. Jim was confused at first but then got so excited he  decided  to
install  the  BBS on his brand new computer using his voice line. Another guy,
Mark, who I met on the chat BBS and was good friends with, was planning to set
up  a  BBS too. When he saw that Jim had set up a BBS, he had to get his going
right then. We learned about WWIVnet from the BBS software  documentation  and
found that we could start our own network.

     Hence  @1, The Great White North, and @2, The Northern Lights, were born.
With two such names, what would be a better name for a network than IceNET?  I
managed  all  the  network connections and we had 12 local boards connected at
one point. Jim was slowly learning what I was doing to keep the network going.
He  then  took over and amazingly got a New Orleans network connected. At this
point, I wrote the automatic network file updating  software  for  IceNET.  We
slowly  got 50 systems in the network. At this point, the network software was
becoming too troublesome for each individual sysop to set up. Before I  had  a
chance  to  correct  any  problems  with the software, Jim decided to purchase
NETUP from Wayne Bell in late 1992 - the mark of a serious hobby. The rest  is
history.  Although I am the founder of the network, I never would have had the
patience or desire to bring it as far as Jim has brought it today.

     I am now 16 and have  remained  in  the  area  of  Telecommunications/BBS
programming  for  quite  some  time.  I  am  about  to  release  IceZmodem,  a
Zmodem-compatible file transfer protocol which will have chat,  DOS  shell,  a
text  editor,  a  .MOD  music  player plus system information about the remote
system all while the transfer is taking place.

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ The Great .QWK Debate - Survey Results and More ³ Papa Bear (1@5079)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     .QWK  (usually  pronounced  quick) -- The slightest mention of of this on
almost any networks' Sysoping subboard brings torrents of heated debate,  both
pro  and  con,  for  its inclusion in/with WWIV (Ed. Note: Anyone ever noticed
that the QWK Debate tends to cycle? Every eight months or so).

First we must address this question:  What is .QWK?

     .QWK is, in its simplest form, a method where  your  users  can  download
[new]  messages in a single "packet". Once they log off your BBS, they can use
an offline reader (OLR) program to read the messages. The OLR will also  allow
them to to reply to these message and send private email (well, in most cases,
some .QWK/OLR interfaces may have problems  properly  handling  private  email
with  WWIV).  Once  they  are done with all of their reading and replying, the
user can then call the BBS, and upload their reply packet (which  has  a  file
extension  of .REP). Once the .REP packet is received, the .QWK interface that
the BBS uses will take the messages in the packet and route them to the proper
subboards/email.

Now we must ask: Why .QWK?

     In the past, WWIV was primarily a "solo" type BBS, not connected to other
BBSes via any networks. In those days, there wasn't a lot of  traffic  on  the
subboards,  even on really busy BBS's. Then came single-net networking. Again,
even on busy BBS, and busy networked subboards, they still didn't carry enough
traffic  to  really  infringe on the users' allotted amount of online time. In
each of these circumstances, it would take DAYS  for  the  maximum  number  of
message  per  subboard (254) to "roll over" (meaning that when messages number
255 was posted, message number 1 would be deleted).

     Recently, however, things have changed. While there  is  still  that  254
maximum  number  of messages limit, there is the introduction of multi-network
capabilities. WWIV BBSes are no longer restricted to a single network, but are
capable  of  carrying  20+  nets.  And,  because  of  the increase in networks
available, there is an increase in the number of subboards. So where a  "solo"
BBS  may  have  had 20 subboards, a single-net subboard had perhaps 100, it is
not uncommon for a big multi-netted BBS to have upwards  of  200.  Also,  with
more  BBSes in the network, more messages are finding their way onto any given
subboard, thereby increasing the traffic flow as well.

     Due to the sheer number of subboards and messages, the user is now,  more
than  ever,  finding  it  increasingly  difficult  to  keep  up  with all this
information. If they don't keep up, they may find something of  importance  to
them  slipping  by  unnoticed. They just don't have enough online time to wade
through the sheer volume of messages.

     .QWK solves this problem. [It  should  be  noted  that  there  is  anther
offline  messaging system for WWIV called WOMR. It accomplishes the same goal,
albeit in a differing format.]

     And, in the future, this dilemma will only be compounded. WWIV is on  the
verge  of  abolishing the 254 message limit -- its being increased to at least
32,768. It is also about to abolish the 999 subboard  limit  --  again  to  at
least 32,768. More subboards, and more messages simply mean more information!

     WWIV  is  also about to have FIDOnet capabilities (or so rumors go). This
is perhaps the largest driving force for including .QWK with WWIV.  As  anyone
who's  been  on FIDOnet can attest, a popular echo (FIDO-ese for subboard) can
easily exceed 500 (!) messages per day. If you carry multiple FIDOnet  echoes,
we're  all  the  sudden talking massive information flow! It becomes literally
impossible for Joe-user to keep up when all they have  available  to  them  is
online time. An offline message system is a requirement to simply keep up.

     And take Internet into consideration. With FIDOnet capabilities, Internet
is only a half-step away. The information flow then increases again,  in  some
cases two to three times what is carried on FIDOnet for some UseNET newsgroups
(UseNET newsgroups being the internet equivalent of a WWIV subboard).

     That's the reason why .QWK is such a hot topic these  days  in  the  WWIV
world. Other BBS programs such as PCBoard, WildCat, and the like, already have
.QWK capabilities (I'll point out here that  they  aren't  internal  to  those
programs).

     .QWK  *is*  easily  available  to  WWIV  these  days. For external usage,
WWIVMail/QWK and WOMR-QWK are available. For internal usage, Asylum's QWK mod,
and  Barry's  (Abiogenetic's)  QWKmod  (QWKmod can only be used with WWIV 4.23
with some modification -- and the source must be bought from Barry Watson  who
seems to have dropped out of the WWIV scene recently)

     Now, on to the controversy. It is hardly about whether or not .QWK should
be included with WWIV. No, the *vast* majority of respondents  to  the  survey
agreed that it should.

     The controversy is over whether or not it should be internal or external.

First, the pros and cons of each.

     External  .QWK  interfaces  have  the  definite  advantage in the area of
memory consumption. They can easily be added as a command to the  BBS  proper,
or  run  as  a  door. Shrinking the BBS out of memory to run the external .QWK
interface basically moots any memory considerations.

     They also have ease of upgrade, and configurability.  Upgrading  normally
means simply copying over the .EXE file over the old one. Configuring normally
means editing a normal ASCII file.

     The cons of externals is compatibility.  More  than  a  few  people  have
reported  problems  running any .QWK external with their particular BBS setup.
Lock-ups, dropped message packets, and other problems have been reported.

     There is also the support question. If the external program  breaks,  you
usually must rely on the author to fix it, and wait for the upgrade (it should
be noted here that WWIVMail/QWK does offer the source code for  an  additional
fee,  but  then  you  must  know  how  to  program, and what to do, to fix any
problems yourself).

     Internal's pros include compatibility. If the person (people)  who  wrote
the .QWK mod used mostly internal WWIV routines, there is very little cause to
believe that it won't be extremely stable with your WWIV, in any environment.

     Configurability. Unlike an external, an internal's configurability  comes
from  your  being able to change the code at will. You can change the order in
which things happen, the way they happen, and the look/feel of  the  interface
with relative ease (again, some programming knowledge is preferable).

     If cons definitely include memory consumption. Whereas the external could
swap out of memory to run, an internal resides in memory at  all  times,  even
when  unused. This can be a serious drawback to some systems (WWIV 4.24 should
alleviate this problem, and simply overlaying the EXE file reduces  the  extra
memory use to a few hundred bytes or so).

     Implementation  can also be a problem. Some people feel terribly skittish
about modifying their userrec - which Asylum's QWK mod does (but rest  assured
that  these  modifications  have  no  impact  on  the  userrec  except  to use
previously unused space). QWKmod, while  not  modifying  the  userrec,  *does*
require  extensive re-modifications to properly support WWIV 4.23's multi-line
capabilities.

     Now, with all that out of the way, on to  the  survey.  A  while  back  I
posted  a public message on a number of networks asking for individual Sysop's
opinions on this. I received replies from WWIVnet, WWIVlink, IceNET,  COMlink,
and  SEXnet.  An  exceptional  turnout, too! Without further ado, here are the
results:

For not including .QWK with WWIV in any form:  5%

For including it internally to WWIV         : 45%
             % wanting WWIV.INI support     : 25%
             % wanting #define support      : 75%

NOTE:  WWIV.INI support means that .QWK could be turned off/on from the
       WWIV.INI file.  This also means that it'd be in memory at all times,
       even if not used, though overlaid.
       #define support means toggling it off/on as a #define statement in
       VARS.H.  This reduces memory consumption if not used.

For including it externally with WWIV       : 55%
             % add WWIV.INI support         :  5%
             % add hook, like WWIVCHAT.EXE  : 42%
             % just run it as a door        : 53%

     So basically we have 55% for external, 45% internal, and %5  for  not  at
all.  There doesn't appear to really be any clear winner here with %10 more or
less being the difference, which isn't much. But read on!

     Some comments from the Sysop, these are all of a common theme. Thanks  to
ALL the Sysops who took the time to write me!

1@14260 WWIVLink

     But  would  also  rather see it offered in a #defined approach, mostly so
that registered  Sysops  would  be  able  to  enable  it...another  reason  to
register...I am sick of the wannabes running without registering!

1@3325 WWIVnet

     Ummm..  I  would  like  to  see  QWK included, in some fashion. It really
doesn't matter to me how it's  done,  as  I'll  just  rip  the  code  out,  if
necessary.

1@3362 WWIVnet

     As far as the #define or WWIV.INI goes, I don't care how it is handled. I
would like to see it be an  external  program  supported  as  WWIVCHAT.EXE  is
supported.  I  saw  a  good  idea on one of the Sysop subs. Have a Minimal QWK
Packer included with WWIV (i.e. Only be able to send, receive, and quit).

1@6560 IceNET

     QWK should be internal. We run  Barry  Watson's  QWK  mod  and  it  works
fabulously. It should be a #DEFINE. Persons with modified user recs would then
not lose QWK ability.

1@8400 IceNET

     No. There are fine EXTERNAL versions available now. Nothing of this  sort
needs to be added to WWIV.

     Now,  finally,  a  word  from  Wayne  Bell  (Random),  the author of WWIV
himself. This was taken from one of the many Sysop's subboards I'm on.

--- BEGIN QUOTE ---
     Sure,  along the way, some things that used to be 3rd party products have
had their functionality integrated into the WWIV  and  WWIVnet  software,  but
that  has  happened  very  infrequently, and has been long after the 3rd party
products first appeared.

     There are a bunch of hooks in the BBS and net  software  to  support  3rd
party  products,  such  as epreproc.net, eprogs.net remotes.dat, logon events,
newuser events, etc.

     If any 3rd party developer out there wants a simple hook added  into  the
stock  BBS or net software, please just email me -- I'll be glad to add it in.
For example, the WWIVCHAT.EXE hook for the external multi-line chat.  This  is
my  favorite  kind  -  it  runs  it  if  the executable exists, but doesn't do
anything awkward if it does not exist.  Really,  if  anyone  has  any  desired
external hook somewhere, it would be no trouble to add in support for it (just
don't say, "Hey, I have a FORMAT.COM external I'd like to have added in..."  I
do  require  that  it  have  some bbs-related name so it doesn't conflict with
anything else.)

     The callback stuff in v4.23, as I'm sure you all know, didn't work out so
well,  and  has been removed for v4.24. The guy who wrote it, Jim Wire, is now
working on an external newuser program (to replace the newuser validation, AND
callback  stuff),  which  he'll  be handling on his own, but which will have a
hook in the BBS to call it if it is there.
--- END QUOTE ---

     What  does this mean to .QWK? Well, it possibly means that .QWK will have
a hook just like WWIVCHAT does.

     However, as someone else has pointed out,  during  this  entire  message,
Wayne  mentions  callback  verifier,  WWIVCHAT, and (not quoted) a full screen
editor (WWIVEdit). Noticeably missing was any mention of .QWK.

     No matter how you feel about this, I'd be willing to bet it'll be settled
with the release of 4.24 at the soonest, and 4.25 at the latest. If you really
feel strongly either way, then email Wayne and let yourself be known. Remember
you  paid  (or  should  be  about  to  pay)  for  this  product,  and  its not
unreasonable to request something be included (or not)!

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ WWIV And The GEnie Online Service ³ Morgul (1@8315)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     As  we  all  know, WWIV is an excellent BBS program. Unfortunately, it is
largely ignored by the majority of BBS sysops and publications  because  of  2
things:  WWIV's  unwarranted reputation as a "kiddie" BBS program and its lack
of exposure in the BBS community.

     This lack of exposure comes about because WWIV is shareware. If WWIV  was
a  major commercial BBS program the resources and finances for major publicity
handling would be available. Nice glossy ads would be highly visible in  trade
publications,  articles  would  constantly  be written about the software, and
major representation would be found at the major BBS conventions.

     However, this is not the case. WWIV is a shareware BBS program  and  thus
doesn't  get  the  exposure  it  deserves. The support for WWIV is all done by
volunteers on our own time and at our own  expense.  The  facilities  for  the
fancy  advertisements  don't  exist so we depend on word of mouth advertising.
It's up to each of us to promote our favorite BBS software whenever we can  in
a reasonable manner.

     That's  where  GEnie  comes in. GEnie is an online service run by General
Electric. It's one of the cheaper online services, yet it offers many  of  the
features the more expensive ones do.

     What  do  these  two things have to do with each other? Well, many of you
may have noticed my messages announcing the WWIV  discussion  area  on  GEnie.
There  is a Telecommunications and Bulletin Board System area on GEnie that is
devoted to, of all things, Telecommunications and BBS's. Many BBS systems  are
represented  there, either by the author(s) or by sysops knowledgeable in that
particular system.

     A while back, a  WWIV  sysop,  Midnight  Tree  Bandit,  became  the  WWIV
representative on GEnie. He was the person responsible for fielding questions,
keeping the library full of  up-to-date  WWIV  files,  and  hosting  a  weekly
discussion  area for WWIV. This discussion area was open to anybody, no matter
what system, software, or platform. The main purpose of it was to help get the
word  out  about  WWIV  and  to  help anybody who had questions about WWIV. He
occasionally had guest speakers such as Wayne Bell,  Filo,  Tolkien,  and  Jim
Nunn.

     When  MTB  moved  on to bigger and better things, he asked me to take his
place as the WWIV representative. Naturally, I did, and  have  been  for  some
time now.

     Each  week, we have a live chat conference on GEnie about WWIV. There are
several regulars who attend, such as Barcus, Swordfish, and Warthog, to name a
few.  In  addition,  we get other WWIV sysops, as well as sysops and users who
are curious about WWIV and want some additional  information.  The  chats  are
informal, generally informative, and usually lots of fun.

     The  chats  are  held  each Tuesday at 10pm EST on GEnie, in the TC & BBS
roundtable (Page 610, option 2). Everyone is invited to attend  and  see  what
it's  all  about.  GEnie, as an online service, is very inexpensive ($8.95 per
month basic fee, 4 free hours, and $3.00 per hour connect charges). There  are
local  access  numbers  all across the country so it shouldn't cost you a long
distance charge.

     Please, if you get a chance, come on by and check it out. Drop in on  the
WWIV  Chat  and  join  in the fun! If you've got any questions about the chat,
GEnie, or anything like that, please feel free to email me and ask!

GEnie (c) 1994 is a trademark of General Electric Information Systems

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ


                        ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ W W I V - S P E C I F I C ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ How I Write A Modification For WWIV ³ Papa Bear (1@5079)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     I  write  a lot of modifications for WWIV. At this writing, I'm smack-dab
in the middle of writing my 44th. Its my largest  by  far,  being  a  complete
replacement for the sub, dir, chain, and G-File editors.
     Many,  many  people  tell  me they like my mods. They say they're easy to
install, easy to use, and usually preform a function that they really like  or
need.
     I  don't  normally do the "lookie feelie" type mods, although I do have a
couple in  current  release.  I  prefer  to  write  ones  that  actually  *do*
something, ones that are, in effect, more of an utility than a modification.
     But  that's  me.  My  personal  preference. There are many of the "lookie
feelie" mods out there, and they are just as valid as any of  mine.  In  fact,
I've  installed  quite a number of them -- relying on them to make my BBS look
nicer.
     I get quite a lot of satisfaction, of personal pride, when  I  know  that
I've written something that a lot of people use and like. The E-Mail I get, as
little as it seems sometimes, lets me know that I'm doing something  right.  I
have to admit its a great ego boost.
     But enough on WHY I write, or WHAT I normally write; let's move on to HOW
I write these things!

                             Step 1. Get the idea.

     This can be the most frustrating part for me. Sometimes my  own  personal
muse just isn't there, and I can't think of anything. Other times, I find that
what I'm thinking about doing just doesn't hold my interest.
     The two main ways I  get  ideas  to  use  are  my  own  experiences,  and
suggestions from other users and SysOps. Occasionally, a general attitude that
something could be done better leads me onward. Reading  the  many  SysOp  and
modification subboards on the networks definitely feeds that last idea maker.
     The  most  important portion of this step is: Define your goal. Determine
exactly what you want the modification to accomplish. If you like to add bells
and  whistles  (like  I  do!) leave those for later revisions, or, at the very
least, leave them out until the primary purpose of you mod has been  met,  and
is working properly.
     There  are,  in  my  mind,  "classes"  of  mods: Fixes, "lookie-feelies",
utilities, and games. These are all self-explanatory. Deciding on what "class"
to  write  a  mod in can certainly determine what I'm gonna write, and how its
development will take place.

                           Step 2. Write up the code.

     Now comes the actual "work". Since you have a defined  goal,  you  should
have a reasonable idea what, exactly, you need to modify.
     If  you're  like  me, you'll just hop right in and starting writing... Of
course, before I do this, I *do* backup the source, and any other  files  that
the  modification  may end up accessing. No need to trash your BBS 'cause of a
simple mistake in coding.
     Hopping right in and doing the code can be the WORST way  to  do  things.
You  *can*  (and  believe  me, I have do this) mess things up terribly. I take
this as a great learning experience. Over time, I  don't  do  this  as  often,
(mess things up, that is) thankfully!
     Another  way to do this would be to take notes on what you wanna do, what
C files, functions, data files, etc. will  be  affected,  and  then  carefully
proceed with the job.
     In  any  case,  I  suggest writing up the bulk of the code, getting it to
some working condition, and then compiling. Test the changes,  make  notes  on
what  needs  fixed  and/or  clarified. Then make the changes and (maybe) add a
little more code. Recompile, test, repeat over and over until you're done!
     Program for virgin source. Do not program  a  modification  intending  to
take  any  other  modifications into consideration (unless, of course, that is
your   intention).   Also   avoid   *any*   and   *all*   compiler    specific
functions/macros. For instance, some Borland C++ functions starting with _ (an
underscore), like _findfirst() may not compile under Turbo C++.

                    Step 3. Write up the modification docs.

     I do this right now because I want to include the mod docs in the testing
stage.  I also tend to write up the docs WHILE I'm actually writing code. That
way, if I add some little piece of code  in  a  not-so-obvious  place,  I  can
document it immediately.
     Documentation  *needs*  to  be COMPLETE. Every little thing you've added,
taken out, or changed needs to be documented, clearly, in the .MOD file.
     Keep in mind that the documentation is actually the most  important  part
of  the  process.  If it is not documented clearly and concisely, then the end
user won't be able to install it, and the coding becomes moot.
     Write for the BEGINNER. Even for hard mods that most  beginners  wouldn't
attempt, writing in this manner can be a God-send.

                            Step 4. TEST, TEST, TEST

     The  second  most  important step. I do this in two smaller steps, one of
which I've already described.
     First, test as you go. This way you can catch little errors and  bugs  as
they happen, and it is *much* easier to squash them.
     Secondly, alpha test it. I consider this a totally personal stage. I test
each component of the modification to  make  sure  it  behaves  properly.  The
MECHANICS  of  the  mod  are  important here, not the presentation. That comes
later. I fix anything that pops up.

                       Step 5. Get other people to test.

     áeta test your modification! Make sure to tell your  testers  to  back-up
any relevant files.
     Because  you  can  be  too  familiar  with  your new creation, it becomes
important to let other people use it to help you determine  if  everything  is
working properly.
     Take  their  reports, and act on them. I believe it is a poor modder that
ignores the áeta testers.
     Now is the time to fix any presentation  problems,  squash  any  leftover
mechanical bugs, etc...
     This  is  also  a  great  time  to  "tighten"  up  the code. Make it more
streamlined so it operates more efficiently and uses less memory  (DGROUP  and
HEAP are important considerations for large mods).
     Some  additions to usability may be added in this step. If so, go back to
Step 2 and go through the steps again. I end up doing a lot of  this  at  this
point. And it helps, believe me!
     All  of  this  testing  can reduce, and in most cases eliminate entirely,
those irritating little "FIX" files that you see from time to time on MOD NET.
     Making certain yourself, and not  using  the  general  WWIV  populace  as
guinea pigs, that all of the bugs and typos are gone will also boost the trust
people have in your mods, and increase your reputation as a good programmer.

                Step 6. Double check code/modification write-up.

     At this point I re-read EVERYTHING. Documentation, the modification code,
menus, text files, everything.
     When  I'm  satisfied that all is well, I take a copy of virgin source and
do a first-time installation. This means following my own instructions to  the
letter.  I  catch a lot of "little" things here that can be frustrating to the
non-modders. Once installed, I compile, and test the executable.
  Once I'm convinced its all okay, Step 7 takes place.

                       Step 7. Release for general usage.

     This is the fun part, and the most nervous time for  me.  Will  it  be  a
success, will it work okay for other people, will people LIKE it?
     You  will  most likely get E-Mail saying that someone installed your mod.
Do not be surprised if you get mail indicating it doesn't work. But, if you've
followed  these steps, you'll find you get a LOT more mail telling you they've
installed it and liked it. Its a great feeling when that happens.
     It is important to SUPPORT your mod. If someone claims it  doesn't  work,
it is up to you to help.
     Keep in mind that you programmed for virgin source. You will, eventually,
get feedback from irate SysOps telling you it doesn't work with  such-and-such
mod.  At  this  point, try to help them. If you can't, politely tell them that
you tested in in virgin source, and any conflicts with any other modifications
cannot  be  anticipated,  and  that  they will most likely have to resolve the
problem themselves.  I've  had  great  success  maintaining  this  course  for
modification support.

     And,  eventually,  you'll be updating your mod if you stick with WWIV and
modding for any amount of time. You'll want to update it for  future  versions
of  WWIV.  You'll  want  to  add new bells and whistles. Whatever. Just follow
these steps, and you'll do well. At least I have! :)

    Good luck, and good modding!

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ WWIV Dreams: The Future and Beyond ³ NightSpeed (1@5051)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     Being  a WWIV sysop has many advantages, but I will be the first to admit
that WWIV does have its disadvantages as well. That's  what  this  article  is
about:  the  future  of  WWIV  and what can be done to make it better and more
enjoyable not only for the Sysop, but for the users and the millions of people
each  year that log onto a WWIV board and find that a key feature they need is
not available to them.

     In my opinion, WWIV has been  in  need  of  some  key  additions  to  the
software  for  quite  some  time. It needs an internal .QWK mail function or a
simpler and more efficient Sub Board selection (although it's pretty easy now,
it  could be easier), or a Front End-type mailer that could finally bring WWIV
Sysops FidoNet, Internet, and .QWK-style network capability to  link  up  with
the  rest of the world that isn't running WWIV or VBBS. I thought that in this
article I could share a few of my own ideas on what should  and  shouldn't  be
changed in WWIV v4.24+ and beyond.

     I  was  one of those that strayed from WWIV to run VBBS and have seen how
the other side lives and operates their boards. I'll admit  that  VBBS  is  an
excellent  BBS software, but some of the key features that are simple, down to
earth, and efficient in WWIV are just a pain in the behind to do  in  VBBS.  I
won't  go  into much detail because to do so would be simply slamming the VBBS
Software Package, which I do not wish to do. Instead, we can use it  to  learn
more on how to increase our own Software's expendability.

                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ= Networks And Beyond =ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     From the beginnings of WWIV v4.21a, Wayne Bell has  introduced  vast  new
changes  in  the  network  capabilities of WWIV, thus increasing the amount of
networks capable of sending and receiving WWIV  mail  many  times  over.  With
versions v4.22 and 4.23, he has fine tuned this networking into a quick, easy,
and worry free system that sysops and users alike  find  simple  and  easy  to
operate  and  move around in. Although Wayne Bell and his production team have
done wonderful work in this field, more can still  be  done  to  enhance  WWIV
networking capabilities.

     One  of  the  main  features I feel that WWIV needs to add as part of its
stock setup is some sort of Front End mailing system, perhaps similar  to  the
one  built  into VBBS, which is fast, simple, and extremely efficient. Here is
my vision of what WWIV may look like in the future. I  have  substituted  some
information for the purpose of demonstration:

---------------------------Example Number One----------------------------
World War IV Multi-Instance Bulletin Board System (C) 1988,1994 v4.25
WWIV Software Services Multi-Network Engine (WW4MNE) v1.00 (Reg #10101)

You are connected at 14400 to Amber on Instance 1
Error-Free Connection Detected

Detecting valid Networks
Press [Esc] Twice or wait for BBS.
NN:
 **EMSI_REQA77E
Checking for Ansi Capability
![e Testing for RIPterm Compatibility
---------------------------End Of Example-------------------------------- 

     Notice that the software would FIRST detect the WWIV type  network,  then
would  go  on  to  check for a FidoNet-based network and then from there if no
network is detected, it would simply check the terminal emulation  being  used
and  continue  on.  Of  course,  the user logging on can bypass all of this by
simply hitting [Esc] twice just like in  FrontDoor  or  any  other  Front  End
system.

     The  simplest  way  for this to be achieved is simple. The software would
first detect the NN: type WWIV Network, and if  it  responds,  then  the  WWIV
network  software  (Net  xx)  would  be  called and network packets would come
through normally as if the Front End did not exist. All network  preprocessors
that  the  sysop  might  have  installed such as PackScan or AutoSend would be
unaffected as well and would operate normally.

     As for FidoNet, this is a different story.  The  way  that  the  software
would  handle  FidoNet mail transfers varies and would be up to Wayne Bell how
he would like to incorporate it. Wayne Bell and  his  development  team  could
incorporate it in one of two methods:

     1)  The  network  detection  phase  would,  upon  detection  of a FidoNet
network, run an external FidoNet mail processor which would toss the mail  and
messages  into  WWIV  and as well could toss any FidoNet information going OUT
into the network.

     2) The Network Detection Phase would call an internal routine that  would
in  turn  process  all  FidoNet  mail similar to the methods used currently by
WWIV's NET software. Although the methods I have used to demonstrate my  point
are rather crude, they do generally show what I'm getting at.

     As  for  Internet-  and UUCP-type networks, this is a different story and
possibly could be added in future versions of the network  engine  (WW4MNE  or
WWIV  Multi-Network  Engine) could add support, but in my opinion it should be
done in a way that would allow for NO external BBS software or programs to  be
used to handle the mail and newsgroups that would be received. This is so that
the Sysop would not have to incur any additional charges in registering  other
software  programs, similar to how WWIV registration also includes the network
software.

     As for .QWK network capabilities similar to those  used  in  WildCat  and
PcBoard  BBSes,  that's another feature that could be incorporated into WWIV's
Front End mailing system. I'll admit I have no idea how the actual mail  works
in  that  manner,  but like I've said, the Front End would just call a program
that would handle all the mail and toss in and out the data.

     A user recently posted on the IceNET National Sysops  Only  sub  that  he
would  like  to  be  able  to  request  files  from a remote system. This is a
wonderful idea for the sysop who likes to add a variety of files to his system
and  call  long distance to get them. I'm sure that a few sysops out there are
probably thinking, "Hey, you can't do that, it'll bog down the  network,"  but
in  reality,  no  network  access  whatsoever  would  be required to have this
feature. This feature in FidoNet land called file FREQing  (File  REQuesting).
Another  method  was  tried  in WWIV called SNARFing files but with no success
[Ed. Note: a program known  as  WW4FREQ  is  currently  under  development  by
Shakespear,  2@2050.  This  program  will  serve to provide file-FREQing under
WWIV, probably using the !-@REMOTE@-! hook already built into  the  software.]
Using  the  Front  End,  the  BBS  could  accept requests for files from other
systems using the following method:

     The sysop presses a key and the BBS requests a file to receive.
     The system then asks for a network node number, and then scans
     the net listings for the appropriate system phone number. If no
     system exists, then the BBS simply requests a phone number. The next
     time the BBS polls it's network connects, the BBS calls the
     system DIRECTLY (not by network), requests the file via the Front-
     End, and logs off, saving the remote SysOp time and money it
     would have taken him to get it by logging on as NEW.

     I admit, some bugs need to be worked out in my plan, but it  is  a  solid
base for a file request system for WWIV.

                      ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ= Internal Mail Features =ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ  
                      ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     Papa Bear recently posed the question on the IceNET National Sysops  Only
Sub  asking whether or not WWIV should include a built-in .QWK Mail processing
system. [Ed. Note: See the results of Papa Bear's  survey  elsewhere  in  this
issue] Some sysops have asked, "Why do we need it?" Well, I pose the question,
"Why in the heck not?" It would make life a little easier for some sysops  who
are  currently  using WWIVMail or some other .QWK generating program if it was
internal. Besides, it's already been done. Several  mods  have  been  released
that  do  this;  the  most versatile and efficient mod being Asylum's Internal
.QWK mod available now.

     Another viable addition that could be added to WWIV is an  internal  full
screen  editor.  Some Sysops may argue, "But I have WWIVEDIT and it works just
fine!" Yes, WWIVEDIT does work and it's an excellent utility, but perhaps  the
addition  of  an  internal  full  screen  editor is something that WWIV needs.
Remember that there are a few sysops who cannot run WWIVEDIT because they  are
running  their boards on a old XT or 286 and they cannot sacrifice the memory.
An internal editor doesn't have to be anything especially fancy, just  editing
with  cursor key movements and some simple deleting features. No dictionary or
spell checking is necessary. The way it is now, if you screw up  a  line,  you
have  to  use  the  /RL command to delete the ENTIRE line and type it all over
again. This is a pain and can be quite nerve-wracking,  especially  for  those
users  that  do not type very well. Again, the mod has been already written. I
believe it was Unca Scrooge who wrote this one and it's an excellent addition,
but it's still a mod that has to be inserted and debugged.

                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ= Future Ideas for WWIV =ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
                        ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     I'll admit I don't have all the answers, but I do have dreams  and  ideas
on  improving  WWIV. WWIV is an excellent software and we the Sysops and users
of it should make suggestions, because perhaps,  or  we  like  to  think,  our
suggestions will be heard.

     Wayne  Bell has taken the first step already by having a Modding Contest.
This is excellent, but not enough. A contest and a  prize  should  NOT  be  an
incentive  to make additions. Just the idea of making this software better and
the fact that we will be running it  for  a  long  time  should  be  incentive
enough.   Perhaps  Wayne  Bell  will  incorporate  some  of  the  hundreds  of
modifications out there into the stock source, and  maybe  he  won't,  but  if
so... he should do it like so:

     ALL  future additions to WWIV should be done using the #define in VARS.H.
Not only to give the Sysop the option of turning ON/OFF the features that they
want, but also to give non-registered sysops incentives to go out and register
their copies!

     I hope that some of you will read my article  and  think  of  WWIV  in  a
different  way. We the Sysops have a say in what features we do and don't want
in our software and we should be grateful that we can make  changes  utilizing
source  code  to do whatever we feel is necessary to make our boards feel like
our own, like a piece of ourselves.

     I will be continuing my series of articles on WWIV dreams and do  welcome
any  suggestions  or  criticisms that you may have. Please send me your ideas,
and I promise to read them and send you a response

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ The Asylum Group: This Is Who ³
³ We Are and Here Is What We Do ³ Zu Digital (1@7321), Sam (1@2077)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
º "COMMON" Modifications -  A History º
ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼

     COMMON was conceived to be a set of functions to make WWIV just a  little
more visually pleasing. My idea of the COMMON series started before COMMON was
even thought of being created, I just didn't realize it yet. With the creation
of  the  Pulldown  Menus, about 1 year before COMMON ever came out, I had sure
plans of making an  interface  that,  number  one,  used  the  arrow  keys  to
navigate,  and  two, just looked better than the "tty" you have grown to learn
and love.

     In all actuality, COMMON  was  not  my  second  generation  of  arrow-key
modifications.  After  the  Pulldown  Menus were first built (for internal use
only) I went to the NTC (for the Army) in California for  30  days.  While  on
guard  duty,  I  planned what would be built and dubbed it "EMS," or Evolution
Menu System. The Evolution was not  to  be  judged  by  today's  current  menu
interfaces  for regular DOS applications, but against BBS programs. It evolved
from the tty interface, to my Pulldown Menus, to the  EMS  library  which  was
written in C++.

     I  then  decided  to  start  releasing  my modifications. But I knew that
another set of functions would be required to do such, written in C,  as  WWIV
will not compile in C++ mode.

Needless to say, COMMON now exists because of that reason.

ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
º Pulldown Menus- The Birth of Asylum º
ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼

     With my first major mod, the Pulldown Menus, I  saw  what  happens  to  a
fairly good mod when I don't play by a certain set of rules.

     I  had  a completed mod, one that I knew was good, but where do I go from
here? How is someone supposed to know what your mod will do for them  and  how
do they know that they "need" to install your mod?

     First off, I made the menus all hard coded, didn't do proper bug testing,
and ended up posting it, completely, about 4 times on Modnet. I knew this  was
not  the  best  way to go about things, but I wasn't really sure about exactly
_what_ it was that I needed to do.

     Then, through a twist of fate, I found Sam (he posted something about the
Pulldown  Menus and I called his board to see them somewhere besides my board)
and Asylum was born.

     My original plan for Asylum was to have a number  of  fictitious  members
along  with  myself  and  Sam,  to  make us look like an good-sized, organized
group. I felt that people would take a "groups'" word  over  a  single  person
saying  "Use  this  mod! It's cool, and you need it." And with the size of the
mods I planned on releasing I figured I could pass it off.

     Well, the group name stuck, but we never did get  around  to  adding  the
fictitious  members.  Instead,  we  added  quite  a number of real people that
wanted to be apart of something real. Theses are very brave sysops,  our  Beta
Testers,  who  have  helped us to release a stable product, one that won't get
killed right after it is released from massive BBS breakdown/crashes etc.

     Sam helped me  with  everything  from  getting  into  the  network  (that
experience  will  be in another article) to registering WWIV to getting my mod
introduced. We re-wrote the pulldown menus and tried  again,  learning  as  we
went,  but  using  a  little  more  common  sense  in  the process. Sam was an
up-and-coming C programmer himself at the time, and was  learning,  literally,
by the seat of his pants.

     We  then  saw  a  little more success with the second version, especially
after I made  the  menus  more  easily-configurable  with  the  Pulldown  Menu
Compiler, eased up on the STACK, removed quite a bit of D-group hogging, and a
LOT of bug fixes.

     Even though I found that  Pulldown  menus  maybe  aren't  the  best  menu
interface  for a bulletin board, I did not give up with my ideas of making the
interface of other aspects of a WWIV BBS a little more fun and a LOT easier.

     We found the main problem with our Pulldown Menu System was  that  sysops
know  how  to use WWIV and do not need to use menus (myself and Sam included).
Of those that _did_ put it in, they reported their new callers simply loved it
and  loved  the ease at which they were able to navigate through the menus. Of
course, callers using "expert" status would never know they were there.

ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
º The Making of a COMMON Modification º
ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼

     The  first  stage  of  a COMMON mod, if it is to become good enough to be
called Asylum, is to come up with  an  idea  that  needs  to  be  implemented,
followed  by  an extensive design process. Believe it or not, the design phase
is  the  most  tedious  and  time-consuming  portion  of  writing  an   Asylum
Modification.  I  rarely  jump right into a huge mod and just start coding. It
may be in my mind for a month before I do anything while I ponder over various
ways  to  start  to  write  this  in  text mode, followed by pseudo-code, then
finally, C code. This is true of the Pulldown Menus,  ListPlus  (which  had  a
design life of something like 2 1/2 months) and QWK.

     Inspiration  comes  at  weird  times. Sometimes at work when I have a few
minutes, I will jot down on paper some design criterion  and  places  I  would
like  to  go  with  the mod and decide what areas I am going to ignore for the
time being. Believe it or not, a lot of ideas come to me in the last place you
would  think  they  would...  the shower, in a chat with one of my callers, at
work, and of course, in conversation with Sam on the phone.

     I eventually come up with a pretty rough idea how it will work. Once  the
program  has  enough  features  added that I think others would like to try it
out, I go ahead and have Sam try it out. If it can make it through HIS complex
set  up,  it can make it through about anything. Inevitably, Sam sends in some
bug reports, along with a HUGE amount of added-feature requests.

     Sam and I finally work out things and  decide  it  is  time  to  let  our
collection  of  BRAVE  beta  testers  give  it a try. Again, in come a few bug
reports and more added-feature requests. The months pass on, the  mod  we  are
working  on  grows into crazy proportions, and finally Sam and I decide, "What
the heck, let's release it on the net."

     Need I say what happens? MORE  bug  reports,  even  after  6+  months  of
extensive  beta-testing  by  the  greatest team of beta testers ever assembled
(save that of Wayne's beta-testing team). QWK recently had a dandy  of  a  bug
that  went  completely undetected in the initial six months of testing only to
be found the very next day after it was released on Modnet by a very observant
Dave  Wallace  and  Emerald Lady. Needless to say, they are now members of our
beta testing team.

Within days, we actually have a working error-free version.

ÉÍÍÍÍÍÍÍÍÍÍ»
º Listplus º
ÈÍÍÍÍÍÍÍÍÍÍ¼

     I was resting on the laurels of my Pulldown Menus  and  we  were  feeling
rather  proud of ourselves. Then one day, I called a local Vision/2-based BBS.
It was simply awesome and put what I  felt  (at  the  time)  was  my  greatest
achievement,  my  Pulldown  Menus, to complete shame. I decided I HAD to write
something of that quality for myself... for WWIV. So in a 6 hour long-distance
phone  call  between  me  and Sam, a new concept was born that was destined to
revolutionize WWIV's transfer section: Listplus.

     Public Relations was going to be critical if this was going to  work.  At
the time, there were a number of file-tagging mods available. Frank Reid's was
(possibly) the most popular. By this time, most all sysops  that  wanted  file
tagging had already installed one of the existing taggers and didn't feel like
digging it out just to install a  new  one  that  "claimed"  to  be  better...
especially by a couple of guys that called themselves "Asylum."

     Sam  posted numerous plugs about my new file-tagging mod. He showed it to
every sysop that called  his  board.  That  met  with  a  lukewarm  reception.
Something more was needed.

     I remember a post about a sysop who lost his back up and started over. He
looked for the same file tagger he had before, but couldn't find  it.  Luckily
our tagger was still on his sub and he put it in. The sysop posted a very nice
comment, something along the lines of not being able to stay in his chair when
he  ran  it  and not believing what he saw (gee, the same feeling I got when I
saw the Vision/2 file listing).

     With that, combined with a few other posts from people who took a  chance
and  tried  it  and  more plugs by Sam, Listplus went from being "just another
file tagger" to a network-wide craze. EVERYONE, it  seemed,  was  going  ga-ga
over  Listplus.  People  were calling and e-mailing from everywhere wanting it
and anything and everything else from Asylum.

Asylum-mania had begun.

     As time went on, Listplus went from a  fairly  "rigid"  mod  without  any
configurations  or  extras  other  than  the  arrow key tagging, to a mod that
supported extended descriptions, the most complete search/finding  routines  I
have  seen on ANY BBS, user configurable file listing, and, finally, plenty of
sysop configuration options such as being able to set the color while  in  the
BBS  for  most  any item, as well as being able to toggle most features on and
off.

     I also had the good luck of WWIV v4.23 coming out. Good  luck  because  I
was able to test it on all 4.22 users and had a _legitimate_ reason of posting
all the fixes that had been done to it (labeled "4.23 version  of  List  Files
Plus" in its entirety on Modnet).

     By this time, I came up with my own ideas of making my mods a little more
popular as well as having my own confidence in my mods grow.

ÉÍÍÍÍÍÍÍÍÍÍÍÍ»
º Asylum QWK º
ÈÍÍÍÍÍÍÍÍÍÍÍÍ¼

     With the popularity of ListPlus, I felt we were about as high as we would
get  in WWIV modding. Then, Sam went multi-line and found (as did many others)
that most (all we tried) QWK mail packet generators would not  work  (at  that
time) with non-standard IRQs.

Asylum to the rescue.

     I started writing Asylum QWK around September of 1993, but lost interest.
But with Sam going multi-line/multi-node, I now had a legitimate reason to put
a  concentrated  effort into its development. Armed with possibly the greatest
beta-testing team ever assembled (save Wayne's), we put Asylum QWK  through  a
vigorous  six  month  test  period.  Finally,  in  May, 94, it was released on
Modnet. As it turns out, the beta team caught all but two minor bugs  and  one
major bug. Not to bad for a mod of this proportion. Those bugs were all killed
and now Asylum QWK is the fastest QWK packet generator (that  we  have  found)
for  WWIV  on  the  market.  It  has  many features not found in other similar
products, such as the ability to configure your Q-Scan from _within_ QWK, your
ability  to set how many (in numbers, not bytes) messages you would like to be
able to download from each sub (as well as the total packet), and an option to
allow  you to take a percentage of posts from each sub (and it is internal, so
the same functions that limits a users time for the BBS  are  used  in  Asylum
QWK).

     But  the  best option of all... it is free (though we will not refuse any
money <g>).

     The public response to Asylum QWK has gone off the meter. Those who  have
tried  it  have  absolutely  fallen  in  love  with  its  speed,  flexibility,
versatility, and reliability. And if I must say so myself, our product support
has  been  second  to  none. Sam and I both have gone so far as to call people
voice at our own expense to help them get things set up and running right.  So
far, no one (to our knowledge) has been disappointed.

     We  have  offered  the  code  to Wayne and WWIV Software Services free of
charge to include in WWIV. There has been a lot of debate on this topic on the
IceNET  Sysops  Only sub, with the vast majority of sysops opting for it to be
included as either a #define option or as a WWIV.INI option. With the onset of
v4.24 of WWIV and it's virtually unlimited message base capability (in numbers
of posts you can keep in each sub), some sort of QWK is  going  to  be  nearly
mandatory.  By including a QWK package in WWIV, it offers a very useful option
and makes WWIV more attractive to new sysops. By making a way to turn  it  off
(by  #define  or  INI), you appease those few sysops who would rather not have
it. And by making it free, everyone can use and enjoy  it  without  having  to
worry  about  sending  money to someone to stop shareware delays or gain added
features.

     We understand that other mail generators are available,  but  it  is  our
opinion that the generator should be apart of the package of WWIV, included in
the same $80 as WWIV itself.

ÉÍÍÍÍÍÍÍÍÍÍÍ»
º Marketing º
ÈÍÍÍÍÍÍÍÍÍÍÍ¼

     Marketing opportunities have come in the strangest ways. After seeing all
that  Sam had done to promote Asylum, I though he had covered just about every
avenue available.

     But as I saw, with a little luck, creativity, and  a  little  opposition,
Sam could still make people not only stand up and take notice of Asylum but he
was actually able to get them discussing it!  Sam  unintentionally  started  a
product  war  on  the Sysops Sub and, because of that, the Asylum Group is now
getting more attention than ever. I had sysops calling my board  to  find  QWK
who  didn't  even  know  anything  about  ListPlus,  let alone COMMON. Through
careful planning, inadvertent help from JAFO,  a  little  luck  and  the  many
people  posting  their  opinions  supportive  of Asylum, I now find people not
knowing about Asylum very few and far between.

     With the popularity of Asylum QWK (it has already  been  downloaded  over
150  times  from  Sam's BBS in just one week) and the fact that COMMON must be
installed to have QWK run, I find my previous mods  now  riding  on  the  coat
tails  of my newest mod. New users on my board (sysops in their own rite) that
didn't even know ListPlus, COMMON, Super Config, Pulldown Menus,  and  my  few
non-COMMON mods existed are becoming institutionalized in Asylum themselves.


ÉÍÍÍÍÍÍÍÍÍÍÍÍ»
º The Future º
ÈÍÍÍÍÍÍÍÍÍÍÍÍ¼

     The  future  for  Asylum  (and WWIV) is very bright. Ideas we are kicking
around include modifications to the sublist and dirlist functions, G-Files and
Defaults.  Maybe something will pop up, possibly a network optimizer that will
take huge packets from servers and  optimize  them  into  message  data  file,
taking  out  redundant  posts, leaving text files for each system, so that the
distant node can rebuild these packets into the correct form that the  network
software  wants  to  see  it in. Sam is currently writing a new voting section
done in Asylum fashion. We have gone about as far as we can go with  Listplus,
QWK may have a little untapped potential in it, but it is time to move on. Any
ideas people have are always considered, so if you are using one of these  and
have an idea for a feature, be sure to let us know.

ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
º Closing  Thoughts º
ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼

     The  motto  we live by at Asylum is "Make 'em say "Wow!" Not only through
the flash and pizzazz we put into every effort, but through product support as
well.

We strive in every modification we release to do just that.

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ WWIV and OS/2 ³ Will (1@6754)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     The  introduction  of WWIV 4.23 brought about a fundamental change in BBS
system requirement. Back in the days of WWIV 4.22 and before, the optimal  BBS
system,  from  a  price/performance standpoint, was perhaps a 286-10. A faster
machine was nice to have, but your average user generally wouldn't notice  any
difference in how the BBS behaved.

     Version  4.23's multi-instance capability tossed this conventional wisdom
right into the proverbial bit bucket. Not only did the system requirements  of
the  system itself increase, but, using a multi-tasking operating environment,
you could run a local node, or two remote nodes, or even more.  In  the  past,
the  ability  to multi-task had been a nice extra for those with one computer.
Now, it's become almost indispensable for nearly every sysop.

     There are several ways to implement a  multi-tasking  environment  for  a
BBS.  For  those  with  lower end systems, Quarterdeck's Desqview multi-tasker
will suffice. While it does a great job with minimal  resources,  support  for
newer   graphical   (Windows,   etc)   programs   increases  the  requirements
dramatically. Microsoft Windows 3.1 (and more recently, Windows for Workgroups
3.11, which is outselling it's companion product by a large margin) is another
option. While Win 3.1 certainly provides a graphical environment, most  sysops
find  it to be unstable. Support for high-speed communications routines leaves
something to be desired, and in the  end  it  can  be  difficult  to  keep  an
instance  or  two  online  all  night, let alone around the clock, or when the
sysop is on vacation.

     IBM's Operating System/2 (OS/2) Version 2.1 (and the slightly newer 2.11)
provides  a  solution to all these problems, providing unmatched power, speed,
and flexibility. While it's not for  every  one,  OS/2  will  let  you  juggle
multiple instances with ease.

     One  main  OS/2  consideration  is  hardware.  While  it's  not nearly as
resource hungry as it's main competitor, Windows  NT.  Microsoft  Daytona  (NT
3.5,  in  beta  at  this  writing)  eases off on some of the memory and system
requirements, but OS/2 is still considerably leaner. A safe memory  target  to
shoot  for  is between 8 and 12 megabytes. After 16, performance gains tend to
level off. For a processor, at least a 386dx-33  or  40  is  recommended,  and
something  in  the 486 range will help increase performance. Keep in mind that
OS/2 can be run on more minimal configurations, as long as the system setup is
optimized.

     These  constraints  will  be  loosed  even more with the release of IBM's
newest OS/2, the so called  "Performance  OS/2."  Currently  in  a  wide  beta
release  (we were unable to obtain a copy in time for this writing, but expect
more information in the next issue of IceNEWS), this new  release  lowers  the
memory  ceiling  to 4 megabytes for operations, and supposedly runs quite well
in  8  megabytes.  Other  performance  increases,  kernel  streamlining,   and
considerably  more  are also rumored to be in the works, along with Windows NT
application support (which is not currently available in the Beta version).

     Once OS/2 is installed on your system, there are certain  steps  you  can
take  to  boost  performance before you even create a WWIV program object. The
first is to install Ray Gwinn's SIO device driver (current version 1.30). This
replaces  the COM.SYS and VCOM.SYS drivers that provide OS/2's built in serial
application support, improving speed and reliability. Installation is simple -
unzip  the  archive,  and  run  the SIO install program. SIO also comes with a
device driver for  DOS  sessions,  VX00.SYS.  This  driver  mimics  a  fossil,
providing  support  for  games  and  other  programs  that need it. More about
installing VX00.SYS in a bit.

     If you have a large amount of RAM (16 megabytes or more), it makes  sense
to  increase  the size of the disk cache. To do this, edit the OS/2 CONFIG.SYS
file. There's a line that begins  with  the  statement  DISKCACHE=xxxxx  (it's
followed  by  some  additional  switches).  Increase  the  number  (xxxx) to 2
megabytes (2048) or so. Experiment to see what works best for your system. For
more  information  on  DISKCACHE,  you  can  look  it  up  in the OS/2 Command
Reference by typing 'HELP DISKCACHE' at either a DOS or OS/2 command prompt.

     Another performance trick involves the "EA DATA. SF" file.  This  is  the
file  that OS/2 uses to keep track of the extended attribute (EA) data for the
various files on your hard disk. There will be one of these files in the  root
directory  of  each  partition. OS/2 access these files a lot, and they become
fragmented, (in other words,  the  constant  read-write  action  scatters  the
components  of  the  file  all  across  the  physical  area of your hard disk,
increasing the  access  time).  This  can  be  easily  rectified  with  a  DOS
disk-defragmentation program, even the DEFRAG utility that comes with MS DOS 6
and above. To do this, simply dual boot into DOS, and type 'attrib  -h  -r  -s
EA*.*'.  Then run DEFRAG, and type 'attrib +h +s +r EA*.*'. When you boot back
into OS/2, you'll notice a substantial performance gain.  The  file  fragments
quickly, so do this every week, or even more often.

     After  you've  created  your WWIV program object (refer to the manuals if
you're unsure how to do this), you'll need  to  tweak  the  settings  for  the
session   a   bit.  To  do  this,  right  click  on  the  object,  and  select
Open->Settings. Click on the Session tab, and click the DOS Settings button. A
list  will pop up. Don't worry if it looks daunting - only a few of these will
want for changing:

     DOS_BACKGROUND_EXECUTION - This should be set to On, as you'll  want  the
BBS to continue it's functioning when it's not the active application.

     DOS_HIGH  -  This  will  provide,  in  some cases, more memory to the BBS
application.

     DOS_UMB - This can be set to on, allowing for  more  memory  conservation
(letting  you  load  DOS TSR's into UMB blocks). Since the BBS doesn't require
UMBs, this is ok to have on. If you have an external program or  a  door  that
requires Upper Memory, then this should be set to off.

     DOS_DEVICE  -  This  is  where  you  can  load  an  ANSI driver, the VX00
faux-fossil, and other device drivers. Just type the path to the  driver  into
the box. For example:

     C:\SIO\VX00.SYS C:\UTIL\ZANSI.SYS or C:\OS2\MDOS\ANSI.SYS

     The  other  OS/2  settings  can generally be left alone, although you may
want to  experiment  with  the  IDLE_SECONDS  and  IDLE_SENSITIVITY  controls,
especially  if  you  have an older, slower computer, and/or limited memory. If
you're running SIO, the SIO_Allow_Access_ComXX (where XX is the com port  your
modem is attached to) should be set to on.

     That's  all  you  should need to start taking advantage of OS/2 and WWIV.
Even if you're not running a BBS, most of the performance tips in this article
still  apply (all of them, in fact). If you have any others ways to boost OS/2
performance, send email to 1@6754 IceNET  or  wcrawfor@nyx.cs.du.edu.  We  may
include them in a future article.

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ The Making of a Mod ³ Spotnik (WWIVnet 1@5497)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     Hi everyone. I was a bit surprised when they asked me to write an article
about my modifications, but of course, I accepted without any problems.  First
of  all,  I  will  tell you now that I'm very good in text composition, but in
French not English. I'm sorry if you don't understand some part of this  text!
I have very good skills in English, but it still basic, not technical.

     So  here  I  am, writing about modifications that I've done, and how I do
them. To do so, I must start by explaining what  did  I  get  started  modding
WWIV, otherwise it would be worthless.

     I  began  in  1990, not knowing anything about C like many WWIV sysops. I
mostly learned by looking at others' work and my cosysop's advice. Actually  I
consider him, to date, as probably the most creative WWIV modder of the 1990s.

     I  remember  logging  on  his WWIV v4.11 and his having a multi-nodal and
conferenced system. He always kept his modifications for  himself  and  that's
why  most  people  don't  know him. I learned C because of him, he helped me a
lot. He learned C by  doing  modifications  for  WWIV  and  reading  Borland's
manual.

     He  helped  me  a  lot  because  he always told me to do my modifications
myself. I guess if I can do it, most people can! We decided only  recently  to
work  together  to  release modifications. I think of the modifications and he
does the coding.

     Over the years I tried writing for myself. I learned  by  myself  and  by
looking  at  other  peoples' work. Like everyone else, I started by installing
modifications from Mod Net and then by  asking  for  help  because  the  first
release never works (that hasn't changed much).

     Eventually,  I  released  my first modification like many people do. Mine
printed the sub name above the read prompt and stuff like that.

     I have learned that in order to release a good and popular  modification,
you  will  need  the  following  things:  experience,  knowledge, imagination,
determination and patience. Without these  attributes,  it  isn't  even  worth
starting.

Step 1 - Brainstorming

     The  first  step  in  the  modification  process  is  probably  the  most
important. It's to use your brain  and  think  of  something  original.  If  a
modification already exists that does what you want to do, then you have to do
it better than everyone else, and do it your own way.

     Many people like me might take existing  code  from  previously  released
modifications  and  try to optimize it in our own way. That's how I started. I
think it's a waste of time to start from scratch when there is a  modification
already  in  existence that does what you want to accomplish. When I do that I
will give credit to the author of the original modification.

     Now is the time to think about what you want to do. Draw it on paper,  or
in  The Draw to see what it will look like. This is called the "brainstorming"
stage.

     Once you have in mind a sketch of what you  wish  to  do,  it's  time  to
start! Of course, a small survey might help. Usually when I do a modification,
I look at things that are already in existence, either in WWIV  or  other  BBS
software,  and  try to come up with a mod that does the same thing. If the mod
doesn't exist, you will have more problems because you will have to write  all
of the functions yourself.

Step 2: Body Work

     It's  almost  the war! You finally get to learn more about C. Usually the
attributes I stated earlier start here. You need  experience  because  if  you
don't  know  WWIV  internal  functions,  it will be your personal hell. If you
don't have programming knowledge, you will freak at your first error and might
give  up. You need determination because this can be a long process. One other
thing you need is time. I usually do my modifications in the night  because  I
like to be calm and to have nobody around to bug me.

     Patience:  it's  a  virtue, and it's needed. Technology might get better,
but compiling WWIV 4 years ago on a 286 machine took 30 minutes! Find  a  bug,
even  if  it's one character, and it might take 1 hour to re-compile. Once you
have done your work, and that the result is what you expected,  it's  time  to
move to next level.

Step 3: Beta Testing

     Your BBS becomes a laboratory.

     I  run  a  WWIV Support Board and this helps me a lot because I have many
users that know WWIV very well. When your mod is for the sysop side, they  can
either  help  you,  or start to bug you to have it right away even if it's not
quite ready.

     I never gave modifications in beta testing. The WFC modification  was  an
exception because it was on the sysop side and I needed second opinions.

     At  this  level you should start to optimize the modification and fix the
its appearance to make it user friendly and to fit with the look of your  BBS.
After a while, you'll know it's ready to go out on the net.

     When you are proud of your work you may decide to release it to show your
skills to other sysops. Don't be afraid to say it, we don't  release  mods  on
the  net  to  meet the goal of "enhance the future of man - B. Gates", but for
our own personal ego. I can keep all my mods for myself like my cosysop always
did, but personally, I like to know that people appreciate what I'm doing.

     I spend a lot of hours for myself, of course. I don't do modifications by
request. The more you want to impress yourself (and of course your users -  in
fact,  that's  the beginning of it), the more you'll get ambitious and release
quality modifications. That, in fact, is a choice that human  beings  make  to
work this way, otherwise, Mod Net would be a quite dead sub.

Step 4: Writing the Text File

     Nightmare!  You'll  wish to do a text file. You have to keep in mind that
there are people who don't know anything about C. You need to do a simple text
file to make installation easier for everyone.

     The easiest way is to give the entire functions. This is best for modders
without experience, but for people that already have a mod in  that  function,
it's not good.

     I  have  another  problem,  I'm  a French Canadian and I need to write in
English because the majority speaks English on these networks. I've learned  a
lot  because of WWIVnet. My English writing skills have improved at least 500%
since I started a WWIVnet system. Still, there  are  many  times  when  people
don't get what I'm saying.

     The text file shows the quality of your modification in a way. A good mod
will always have a well done text file. They go together.

Step 5: Posting The Modification

     The big day!  You finally decide to post your modification.

     Normally there isn't a modification released that doesn't have  problems.
Now  you  will  start to feel the worst side of doing modification. People are
emailing you to tell you that this isn't okay, and that isn't all  right.  You
get 10 e-mails because you forgot a space somewhere. People are trying to help
you, of course.

     You'll get mail from people thanking you. People shout at you because you
can't  do  a  mod without a problem. Not everybody is satisfied with it. There
you have 2 choices: get  depressed  and  forget  about  it  and  keep  it  for
yourself, or go to next level...

Step 6: The Revisions

     Popular mods will stay around forever!

     The revisions are at the beginning bug fixes. If the mod author gets good
mail from people using his mod, he will really feel better and it might put  a
smile on his face.

     After  the  first post of my WFC modification, I received plenty of email
telling me how good that mod was, and I still receive  mail  6  months  later!
This  will encourage the author to continue with the modification because he's
written something special.

     Then I start to do fancy stuff and listening to  comments.  After  seeing
that  people  liked it a lot. I decided to ask my cosysop for some help and we
formed a team for that modification. I got external help of course, but if you
look at SPOT016.MOD and SPOT016D.MOD, you will see what team work can do for a
modification. Addition of arrow keys and scrolling bar, real  time,  etc.  are
some of the things we've added recently.

     This  is  enhancement  stage that gives a modification a status above the
others. If I wouldn't have received all that mail, do you  really  think  that
modification  would  still  be in progress and I would now be talking to Wayne
Bell for inclusion in the next version of WWIV? Of course not! Basically, this
is  the  best  modification  I've  ever  done for WWIV. Without the support of
people from the first release, this mod would have been finished  with  the  B
revision.

Step 7: Evolve

     No, it's not finished!

     You  will  need  to  upgrade  your  modification  if  you want it to stay
popular. Upgrade it for each version of WWIV and promote it. When people  have
ideas,  you have to listen to them and see what you can do to further optimize
your coding. Maybe the day will come  when  someone  else  will  do  something
pretty similar, or better, than your work. That day will be the question. Do I
continue and try to do better, or do I support him and help him  (like  I  did
after seeing ListPlus!)

     That's  it  I  think.  When  you  have  more  than  100 people using your
modification, I guess you can call it pretty popular.

     The best way to get quality modifications is to appreciate  the  author's
work and tell him that you use his modification.

     To  start  writing  your  own, you need determination, it took me about 4
years to reach that level with one modification.

     The majority of our  modifications  are  old  projects.  We  started  WFC
screens  on  v4.11,  and  the Full Screen Callout was done on v4.12. A quality
modification might be a simple one that evolves over the years because  you've
increased  your  experience  and knowledge. I learned how to set the screen to
80x50 only 5 days before releasing my WFC screen!

     Imagination will always serve you. In 4 years, the WFC  modification  has
evolved to the simple ANSI screen printed on screen to what it is now.

     You  need  determination  because to achieve a goal after 4 years is long
time, even if you thought that it was nothing special at the beginning. A good
idea will always stay, all you need is to try to do better than everyone.

     And  for  patience,  imagine the amount of time that has been spent since
the beginning for such a "simple" modification! Of course, it  didn't  take  4
years  to  do  the  WFC  a mod. It actually took 6 months to reach the current
version from the first one, with experience playing a large part.

     So, do you have the 5 qualities that it requires? I sure hope so!

     Don't give up! Start doing your own modifications! You  will  learn  many
things and get much satisfaction from what you do!

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ


                 ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ S O F T W A R E / P R O G R A M M I N G ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ BBSing Enters A New Dimension: ³
³ The RIPscrip Graphics Protocol ³ Zack Ives (WWIVnet 3@7729)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     It's something that you have probably  been  hearing  a  lot  about,  and
perhaps  something  have  even  seen for yourself. Telegrafix's Remote Imaging
Protocol, RIPscrip, has quickly become the standard in implementing  graphical
BBSes.  Nearly  every  sizable collection of shareware will include at least a
few RIP-compatible doors or utilities and almost all of the major BBS programs
support  RIP.  WWIV  4.23  is  one of the few which does not have built-in RIP
support but you can get mods from at least two sources, myself and  Midi  Man.
WWIV  Software  Services  is evaluating each of these for inclusion in Version
4.24 and most likely WWIV 4.24 _will_ include RIP support.

     The RIPscrip protocol itself is  quite  simple  but  elegant.  Like  ANSI
graphics,  RIP  codes  are  formed  from  regular  ASCII characters and escape
sequences and the terminal program is responsible for interpreting them. As of
this  time,  there  are only three RIP-compatible terminal programs I am aware
of: Telegrafix's freeware program RIPterm, Mustang Software's QModem  Pro  and
QModem  Pro  for  Windows.  Each  of  these requires an EGA or better graphics
adapter and a bit of hard disk space, but, in most cases, a 2400 bps modem  is
acceptable. The RIP graphics standard is object-based, not bitmap-based, so it
is quite compact. That is why RIP is not a protocol which puts huge strains on
system resources despite the fact that it is graphical in nature.

     On   the   sysop's  end,  requirements  are  even  simpler.  The  primary
requirement is that the BBS have support for RIP graphics. If  you  are  using
WWIV,  this  means  you need to purchase a good RIP mod or you must write your
own support.

     Because the graphics-mode overhead would be quite large  (about  100K  in
most  situations),  most  bulletin  board  programs  will  not display the RIP
graphics locally. Unfortunately, this means the sysop will not be able to  see
what  is  on  the user's screen but it also means he or she can support RIP on
any machine that can run a BBS, even one with only a monochrome adapter.

     Entire RIP screens are stored as alphanumeric codes so  regular  messages
and  e-mails  can  include embedded RIP images very easily. Interestingly, the
buttons the user sees on the screen are much like macros. When the user clicks
on  a  command, it sends a text string back to the BBS, executing the assigned
command. Essentially, the BBS needs to "know" very little about  RIP  graphics
to support them.

     On  the  other hand, a well-done implementation will have quite extensive
RIP-specific code. When the user logs on, the BBS  program  can  automatically
detect whether RIPterm is running or not, and switch into RIP mode.

     One of the best features of RIPterm is its ability to display RIP screens
saved on the user's machine. That is why most BBSes will allow their users  to
download  all  of  the  RIP  menu  screens.  Instead of transmitting an entire
screen, the BBS can simply transmit a short playback code, and the  menu  will
be  loaded off the user's hard disk at a much faster rate. This is a necessity
for anyone running RIP at a speed lower than 14.4Kbps.

     RIPscrip has one other feature of importance: a database.  This  database
is  not  what  the name implies; it is simply a file for storing user-specific
information. The BBS can create variables with particular  names  and  it  can
assign  information  to them and store this information on the user's machine.
It can later request that information. This is an  excellent  place  to  store
user-specific  items  such  as configuration information, the user's name, and
flags.

     As you can see, RIP is more than just a simple protocol for pictures.  It
gives  the  BBS  a  number  of  extra capabilities that no text-based protocol
supports. However, the graphics are the real  selling  point,  mainly  because
they  can  be  used to implement a graphical interface for your BBS. There are
two types of graphics  files:  icons,  which  are  bitmaps,  and  are  usually
downloaded  by the user for playback off the hard disk; and RIP screens, which
are object-based. The RIP screen is more than a vector-based drawing, however,
because  it  also  contains  instructions  on  where  to display the icons and
buttons.

     At the lowest level,  the  RIP  screen  consists  of  graphics  commands,
mouse-field commands, and window and text information. RIP has a full range of
graphics commands, including ellipses and polygons, as  well  as  custom  fill
styles,  icon placement, and a flood-fill. These are used to draw the image on
the screen. Mouse fields define rectangular regions where the user  can  click
the  mouse  to  activate  a designated series of (text) commands. Finally, the
window commands define the limits for the RIP graphics and  ANSI  text  areas.
You  can  create  a RIP screen as a frame, and define a small window for text;
everything that the BBS displays will appear within the text window until  you
remove  the  RIP  screen  with the special RIP_CLS code. To the BBS, the upper
left corner of the text window becomes the top of the screen, and all ANSI and
text sequences go into that window.

     RIP also has higher-level, composite instructions. One of the most useful
is the RIP_BUTTON code. This code will draw  a  three-dimensional  rectangular
button  and  assign  a text macro to it, all in one operation. There are other
commands to detect whether a  RIP  file  exists  on  the  user's  machine,  to
transmit menus to the user for downloading, and to display a RIP screen stored
on the user's machine. All of these are discussed in  detail  in  Telegrafix's
RIPscrip specifications document.

     However, this basic discussion of how RIP works is enough to give you the
knowledge you need to create your  own  RIP  BBS  menus  with  a  RIP  drawing
program.  The  two  best  I have used are Flatliner and DeadPaint. I have also
used Tombstone Artist, but I found that the version I had  to  be  inadequate.
For  icons,  MAKEICN  (for  drawing)  and  MegaClip (for conversion from other
graphics formats) are very useful. If you intend to  create  menus,  you  will
probably  want to include a text window for your BBS command prompt and/or any
other information. You will probably also find it more efficient  to  use  the
button commands instead of drawing boxes and then adding mouse fields.

     Right  now, RIPscrip is still slightly hampered by a few shortcomings. It
only supports EGA-level (640x350, 16-color) graphics, it  does  not  recognize
any  standard  graphics formats, its font support could be better, and it does
not allow multiple windows. However, with the  upcoming  release  of  RIPscrip
2.0, Telegrafix will be addressing all of these limitations.

     Version  2.0,  which  was  actually  scheduled  for  a first-quarter 1994
release, and is thus already overdue, will be a huge  step  forward.  It  will
include  support  for  24-bit (16.7 million color) graphics at any resolution;
and will include much-improved font and windowing commands. It  will  also  be
able to use GIF, TIFF, and JPEG graphics images. There will not be any loss of
backward compatibility, either.

     RIPscrip Version 2 is  definitely  something  to  look  forward  to,  but
Version  1  already  adds  a new dimension WWIV and other BBS programs. It can
give BBS callers the type of graphical interface that they are familiar  with,
even  the familiar Microsoft(R) Windows(TM) interface, complete with pull-down
menus and dialog boxes. RIP can bring a  new  level  of  friendliness  to  the
previously command-line- only BBS program.

     Note:  If  you  are interested in my RIPspeed mod, or would like to get a
copy of Telegrafix's  RIPscrip  specifications,  please  e-mail  me  for  more
information.

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Learning C - Part Six ³ Daarkhan (1@7676)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

      Chapter Six: MORE PROGRAM CONTROL STATEMENTS: FOR LOOPS

IMPORTANT NOTICE

     This  is  the SIXTH chapter in a tutorial series by Richard Rost designed
for people who know very little about programming and want to learn C. If  you
have  not  read  the  previous  chapters,  I  urge  you  to  call  Paragon BBS
(716/837-1636) and download them!

FORWARD TO CHAPTER SIX

     Well, once again, it's been quite some time since I said  I'd  have  this
chapter out. I do my best, however. Summer's here now, and I'm on vacation, so
I'll try and get these chapters out as quickly as possible. Again,  thanks  to
those of you who keep the Learning C message base alive.

PROGRAM CONTROL STATEMENTS

     We learned about the IF statement in the last chapter. Now, let's move on
to the FOR statement.

     Suppose you want to get your program to count from 1 to 10. How do you do
it? Well, I'll show you and then I'll explain it to you.

    void main (void)
    {
        int x;

        for (x=1; x<=10; x++) {
            printf ("%i\n", x);
        }
    }

     That's  it.  Let's examine the FOR statement. The FOR statement has three
parts: initialization, conditional test, and increment.

     The first part, the initialization, sets the  counter  variable  (in  our
example, 'x') to some starting value. This is only done once, at the beginning
of the iterations. (Iteration: process of repeating an action. Each  time  the
loop repeats, it is called another iteration).

     The  second  part,  the  conditional  test,  is a test for equality which
forces the FOR loop to continue while the condition evaluates  to  TRUE.  When
the conditional test evaluates to FALSE, the loop stops.

     The  last  part, the increment, occurs at the end of each loop iteration.
The counter variable, in our example, 'x', is incremented by the  value  found
here.

     So,  taking  another look at our example, we initialize a variable 'x' to
start at 1. The condition "x <= 10" is evaluated to TRUE, and the  loop  takes
place.  After  printing the number 10 on the screen, the increment takes place
(x++ now sets the value of 'x' equal to 2) and the  loop  continues.  Finally,
after 'x' is incremented to 11, the condition no longer evaluates to TRUE, and
the loop exits.

What happens with this for loop?

    for (x=10; x>10; x++) printf ("%i\n",x);

     Nothing happens. 'x' is initialized  to  10.  The  conditional  value  is
checked,  and  evaluated to FALSE (10 is not greater than 10) and the printf()
statement is never executed. The loop exits immediately.

     We do not always have to count forward. We can count  backward  as  well.
This loop counts from 10 to 1 backwards.

    for (x=10; x>=1; x++) printf ("%i\n",x);

     And we can use the increment to count by steps other than ones. This loop
counts from 1 to 100 by 10s.

    for (x=1; x<=100; x+=10) printf ("%i\n",x);

Executing that last loop gives you:

        1
        11
        21
        ...
        91

     Seems kinda odd, doesn't it? Take a close look at the  for  loop  to  see
why.  If  you  want  to  count  by  multiples  of 10, you have to restate your
request:

    for (x=10; x<=100; x+=10) ...

     That will give you counting BY tens; a more familiar looking practice.


NEXT

Logical operators: AND, OR, and NOT.


SOURCES

    Downing, Douglas. Dictionary of Computer Terms. New York: Barrons,
        1989.

    Holzner, Steven. C Programming: The Accessible Guide to Professional
        Programming. New York: Brady, 1991.

    Schildt, Herbert. Teach Yourself C. Berkeley: Osborne McGraw-Hill,
        1990.

    ---. Turbo C/C++: The Complete Reference. Berkeley: Osborne
        McGraw-Hill, 1990.


COPIES

     For a hard copy of this, or any single  chapter  of  the  tutorial,  send
$1.00 US along with your mailing address and which chapter you want to:

                             Learning C
                          c/o Richard Rost
                          1280 Walden Ave.
                       Buffalo NY 14211-2820

     Copies  also  available  on diskette: $5.00 for 5.25"; $6.00 for 3.5". We
will fit as many chapters as possible on your disk. Your  disk  will  also  be
loaded  with  some  of  Master  Software's shareware programming utilities and
sample source code!

     You can always download the ENTIRE tutorial series free  of  charge  from
PARAGON BBS by calling 716/837-1636 with your modem.

MAILING LIST

     If  you  would  like  to  get  on the "Learning C" mailing list, you will
receive, by U.S. Mail, hardcopies of the next chapters of "Learning C" as soon
as  they  are available. Send $1.00 US for each future chapter of "Learning C"
(as many as you want to receive) to the address above to get  on  the  mailing
list. Be sure to include your name and mailing address.

C DISCUSSION NIGHT

     I am hosting C Discussion Nights on The Blue Moon BBS every Tuesday night
at 8:00pm. Blue Moon BBS is a multi-line (11 at current count) system  with  a
multi-user  conference  area.  All  are  welcome. You can catch me there every
Tuesday at 8:00pm (provided I can get  through!)  until  the  discussion  dies
(usually a few hours). The numbers for Blue Moon are:

    High-speed lines (14.4):            716/876-2547
                                        716/876-5705
                                        716/876-1913
                                        716/873-5038

    2400 baud lines (rollover):         716/874-8941

2400 baud callers, please try calling the 2400 line first. Thank you.

NETWORK ADDRESSES

     I,   Richard   Rost   (Daarkhan),  am  a  remote  sysop  on  Paragon  BBS
(716/837-1636). My user number is 2, and you can send Email to me through  the
following networks:

                           WWIVnet 2 @7663
                          WWIVlink 2 @17652
                            IceNET 2 @7654

NOTICE

     This and every "Learning C" tutorial chapter are Copyright 1993 by Master
Software and Richard Rost, all rights reserved. You may,  and  are  encouraged
to,  freely  distribute  this  and  any  tutorial  chapter  provided it is not
modified in any way, and no remuneration is  accepted  in  any  form  save  by
Master Software or Richard Rost.

    ÄÄÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÄÄ


                           ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ L I T E   B Y T E S ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Silly Strings - From IceNET Sysops Everywhere ³ Ima Moron (1@9661)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

     This month I've choosen to include donated taglines and miniesm       
     editings. The miniesm editings follow the taglines.
 
     Taglines;
 
     In the immortal words of Socrates, "I drank WHAT?!?!"
     by Alkar Zephyr #1 @4506 IceNET

     Be vewy, vewy quiet . . . . I'm hunting tagwines!
     by Will #1 @6754 IceNET
 
     Canadian DOS: "Yer Sure, eh? [y/n]"
     Grey Wanderer #1 @3358 IceNET

     Everyone has to believe in something.  I believe I'll have another beer.
     Grey Wanderer #1 @3358 IceNET
 
     Miniesm editings;
 
     String 91: Saving...
     Converted to - Grind. Grind. Grind!  Make that flour!
     by The Director #1 @3659

     String 362: "Last few callers"
     Converted to - "Last few deleted users"
     by Gato #1 @9995 IceNET

     String 682: Message CAN now be auto-purged
     Converted to - Handle activated, message WILL be flushed!
     by Ima Moron 1@9661 IceNET


ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ The Hows and Whys of Handles ³ Louie (6@1)
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ

     Why  do  BBSers  use  handles? Why not? CB Radio enthusiasts use handles.
BBSers probably stole the concept from the CB Radio community.  Handles  allow
folks to be a little different from how we are in normal, everyday, life.

     Some  people, even members of the BBS community (like the FidoNet folks),
think that the people that use handles  are  trying  to  hide  our  identities
because  we  are  hacker,  cracker, phreaker, pirate scum out to overthrow the
United States government and destroy Western civilization as we know  it.  The
idea  being  that  because  we  don't  introduce ourselves as "Hi, I'm Joe Bob
Jones" right away that we automatically have something to hide.

     My response to that charge is to ask "When was the last time you were  at
the  Mall  or Supermarket and everybody you met said `Hi, I'm Joe Bob Jones?'"
If that ever happened to you, get worried because it isn't normal. And,  trust
me  on  this,  they  all  were probably lying. Not everybody is named "Joe Bob
Jones."

     But seriously, if you have a real need to know my real  name  I  will  be
more  than  willing  to  tell  it  to  you. I give my real name and address to
sysops. I go to BBS picnics. It isn't like I am hiding  in  the  basement  and
BBSing only late at night while running from the FBI.

     [Note from the Managing Editor - it is common speculation that Louie *is*
in fact being hunted by the FBI, or at least the CIA. It stands to reason that
he's done something.]

     People  use handles for the simple fact that it is fun. It isn't breaking
peoples legs or anything so I don't think there is really anything wrong  with
the practice.

                            HOW TO CHOOSE A HANDLE

     When choosing a handle, a new BBSers should remember a few things. First,
you will pretty much be stuck with it for your whole BBSing life. Even if  you
change  your  handle  later  people  who  remember you from way back when will
persist in calling you by your original handle (just ask The Fez, er,  I  mean
Deacon  Blues).  Second, you should choose something original and imaginative.
Third, it should say something a little about yourself and your personality.

     You should remember a few things about what not to  do  when  choosing  a
handle.  For one, you shouldn't choose your real name. Choosing your real name
kind of defeats the whole idea of having a handle. It also  shows  a  definite
lack of imagination.

[M/E note #2 - <cough>]

     Two,  you shouldn't pick a handle that is already in use by someone else.
You should even avoid handles that would seem to be the  same.  Third,  sysops
should  never  use the handle "Sysop." Basically you are not the only sysop in
IceNET and therefore shouldn't confuse other folks around the network. Fourth,
don't use profanity. Fifth, don't use the real names of other people.

     That  second  point on things to not do when choosing a handle deserves a
little attention by itself. You see, when you choose a handle already  in  use
it  not  only confuses folks who get both of you mixed up, but it also shows a
lack of imagination. For example, how many people use  the  handles  "Wizard,"
"The Wizard," "Wiz," "The Wiz, "Mage," "The Mage," "Dark Mage," "Dark Wizard,"
"High Wizard," "Merlin," "Gandalf," "Merlin  the  Magician,"  "Black  Wizard,"
etc.  throughout  IceNET and WWIVland? In the 716 area alone we have more than
our fair share. Other words that  have  this  problem  are  "Lord,"  "Knight,"
"Master,"  "Death,"  "Killer,"  You  have  seen all the weird handles that are
overused.  Don't use them again! If you do, I will have to come after you. :-)

                             HOW I GOT MY HANDLE

     So,  now  you  have a right to ask, how did Louie get his handle. Well, I
ain't telling and you can't make me! Hey, put that gun  down!  Bang!  Ok,  Ok,
I'll talk.

     [M/E  note #3 - I didn't have to fight to find out. And I did know before
he wrote this.]

     Well, it was a dark and stormy  night.  A  bunch  of  computer  scientist
wannabes  were  programming  their projects peacefully in the college computer
lab. Sure, it was late at night, but some us got paid to sit  around  the  lab
and make sure nobody walked off with the computers so we had keys to the lab.

     Well,  we  were all sitting around going insane because our projects were
not in working condition. Now, what is the main  thing  College  Students  are
noted  for? Drinking and eating pizza. So, naturally, we had to order a pizza.
Or several pizzas maybe, since it has been a while.

     Well, the pizza delivery guy was a bit... how shall we say... stupid.  He
was  also named Louie. We used to make fun of Louie when he wasn't around. The
worst insult you could hurl in the computer lab was to call somebody a Louie.

     So, naturally, when I started in BBSing I decided to take my handle  from
a dumb pizza delivery man. Hey, I'm a BBSer and that is all the excuse I need.


         EVALUATIONS OF THE HANDLES OF THE REST OF THE IceNEWS STAFF

     Well,  obviously  I  disapprove  of  people  who  have  no imagination or
creativity in choosing handles. Therefore, I think Jim, Will  and  Chris  have
failed in the obligation in choosing a good handle.

     [M/E  note  #4 - I've had plenty of wild handles in my life. I'm just not
saying what they are.]

     I do approve of the handles of Deacon Blues, Papa  Bear,  Ima  Moron  and
Daarkhan, though. They are imaginative and original handles.

     I don't think people should try to change handles myself, although Deacon
Blues used to be known as The  Fez.  And  like  I  said  before,  some  people
continue to call Deacon by his old handle and I will continue to do that to my
dying day. :-)

                                HANDLE VANDALS

     In the past on some boards in the 716 area, Handle  Vandalism  Wars  have
been  widespread.  It  used  to  occur  on boards in the area where just about
everybody was a Cosysop and had access to Uedit. We would  change  each  other
handles  often. It got so bad at times where a person would launch pre-emptive
strikes on themselves in order to make somebody else think another person  was
the  culprit  that  time. Needless to say, we all learned to remember our user
numbers then.

     Handle Vandalism Wars can be great fun. However, those who engage in such
activity  should remember to only war with those who can defend themselves and
strike back. In other words, don't attack non-cosysop people. We all once made
the  mistake  of  letting  loose  our  handle  vandalizing on the general user
population at large. Let's just say that it wasn't a  pretty  sight  when  the
sysop  was  hauling  us  all  into  line  for  our action. Executions were not
uncommon. :-)

     In conclusion... I would just like  to  say  again.  We  people  who  use
handles  are  not  evil  hacker,  cracker,  phreaker,  pirate scum who want to
overthrow the United States government and destroy Western civilization as  we
know it. We just want to destroy Western civilization. :-)

     [Final M/E note - this is why I do not drive up to New York for the staff
meetings.]


  ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
  ³ IceNEWS is an independent newsletter published monthly as a service to ³
  ³ IceNET, its sysops and users.  The opinions & reviews expressed herein ³
  ³ are the expressed views of the respective writers. All Rights Reserved.³
  ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
